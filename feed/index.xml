<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Scratch</title>
    <description>ブラウザ/JavaScript等についてのブログ</description>
    <link>http://efcl.info/</link>
    <atom:link href="http://efcl.info/feed/" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Feb 2016 11:17:36 +0900</pubDate>
    <lastBuildDate>Wed, 03 Feb 2016 11:17:36 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>未知の頭字語を見つけるtextlintルール</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/azu/textlint-rule-unexpanded-acronym&quot; title=&quot;textlint-rule-unexpanded-acronym&quot;&gt;textlint-rule-unexpanded-acronym&lt;/a&gt;という&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;ルールを書きました。&lt;/p&gt;

&lt;p&gt;textlint自体については以下を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/10/introduce-textlint/&quot;&gt;textlintで日本語の文章をチェックする | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/12/30/textlint-preset/&quot;&gt;ルールプリセットを使ってお手軽にtextlint入門 | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;textlint-rule-unexpanded-acronym&quot;&gt;&lt;a href=&quot;https://github.com/azu/textlint-rule-unexpanded-acronym&quot; title=&quot;textlint-rule-unexpanded-acronym&quot;&gt;textlint-rule-unexpanded-acronym&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;textlint-rule-unexpanded-acronymが見つけるのは未知の&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E9%A0%AD%E5%AD%97%E8%AA%9E&quot; title=&quot;頭字語&quot;&gt;頭字語&lt;/a&gt;です。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;頭字語（とうじご）とは、主にヨーロッパ言語のアルファベットにおける略語の一種で、複数の単語から構成された合成語の頭文字を繋げて作られた語のこと。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;OSS: Open Source Software&lt;/li&gt;
&lt;li&gt;IEEE: Institute of Electrical and Electronics Engineers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;みたいな短縮された単語です。&lt;/p&gt;

&lt;p&gt;頭字語がいきなり説明なしに出てきた場合に、最後までそれがなんの略語なのかわからないと意味が分からない文章になってしまいます。&lt;/p&gt;

&lt;p&gt;そのため、頭字語がでてきたらその元となった単語が文章中にでてきているかをチェックするルールです。&lt;/p&gt;

&lt;p&gt;例えば、以下のような文章ではOSSがOpen Source Softwareの略であることを説明してないのでエラーとなります。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;OSS開発を行う人には色々なタイプがいるはずだ。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まだアルファベットしか対応してないです(日本語対応できるのか謎)。&lt;/p&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install textlint-rule-unexpanded-acronym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;.textlintrc&lt;/code&gt;で設定する場合は以下のように設定できます。
(内容はデフォルト値になっています)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;rules&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;unexpanded-acronym&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;min_acronym_len&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;max_acronym_len&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;ignore_acronyms&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;設定&quot;&gt;設定&lt;/h3&gt;

&lt;p&gt;上記の設定で書いたように幾つかのオプションがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;min_acronym_len&lt;/code&gt;(default:&lt;code&gt;3&lt;/code&gt;): 指定した文字数以上の頭字語をチェック対象とします。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_acronym_len&lt;/code&gt;(default:&lt;code&gt;5&lt;/code&gt;): 指定した文字数以下の頭字語をチェック対象とします。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ignore_acronyms&lt;/code&gt;(default:&lt;code&gt;[]&lt;/code&gt;): 無視する頭字語を指定できます。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;min_acronym_len&lt;/code&gt; 以上 &lt;code&gt;max_acronym_len&lt;/code&gt; 以下の文字数をチェックするので、デフォルトでは3-5文字の頭字語だけがチェックされます。&lt;/p&gt;

&lt;p&gt;また、OSSというような説明しなくても分かるであろう頭字語を無視するオプションもあります。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{
    &amp;quot;rules&amp;quot;: {
        &amp;quot;unexpanded-acronym&amp;quot; : {
            // AB is ignore, ABC is recognized.
            &amp;quot;min_acronym_len&amp;quot; : 3,
            // GREEEEEEN is ignore
            &amp;quot;max_acronym_len&amp;quot; : 5,
            // OSS is ignore
            &amp;quot;ignore_acronyms&amp;quot; : [&amp;quot;OSS&amp;quot;]
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;todo&quot;&gt;TODO&lt;/h3&gt;

&lt;p&gt;日本語も対応できると良さそうだけど、普通に難しそうな気がする。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://azu.gitbooks.io/nodefest-technical-writing/content/slide/96.html&quot; title=&quot;実験: 文章に対して文章でテスト | 技術文書をソフトウェア開発する話&quot;&gt;実験: 文章に対して文章でテスト | 技術文書をソフトウェア開発する話&lt;/a&gt;で似たような話をしていました&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;RedPenの同様の機能を参考に実装しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://redpen.cc/docs/latest/index.html#unexpandedacronym&quot; title=&quot;UnexpandedAcronym&quot;&gt;RedPen UnexpandedAcronym&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 22 Jan 2016 20:10:00 +0900</pubDate>
        <link>http://efcl.info/2016/01/22/textlint-unexpanded-acronym/</link>
        <guid isPermaLink="true">http://efcl.info/2016/01/22/textlint-unexpanded-acronym/</guid>
        
        <category>textlint</category>
        
        <category>english</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>JavaScriptのコードを分解してよく使われてる機能を分析する</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://efcl.info/2015/12/31/oss-in-2015/&quot; title=&quot;今年のOSS活動振り返り @ 2015 | Web Scratch&quot;&gt;今年のOSS活動振り返り @ 2015 | Web Scratch&lt;/a&gt;で&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript/ECMAScriptを改めてどう学べばいいのか考える

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/how-to-learn-es6&quot; title=&quot;azu/how-to-learn-es6&quot;&gt;azu/how-to-learn-es6&lt;/a&gt;とか&lt;a href=&quot;https://twitter.com/hashtag/thinking_in_es6?src=hash&quot; title=&quot;#thinking_in_es6&quot;&gt;#thinking_in_es6&lt;/a&gt;で考えてるやつ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;というのを今年考える事としてあげていました。
それを考えるために、既存のコードがどうなってるかを見てみるという話です。&lt;/p&gt;

&lt;p&gt;具体的には既存のコードを見て、そこでどういう機能/構文が多く使われているのかが分かれば、どこを中心的に学ぶと結果が出やすくなるのではという感じです。&lt;/p&gt;

&lt;p&gt;それを分析するために&lt;a href=&quot;https://github.com/azu/es-usage-rate&quot; title=&quot;azu/es-usage-rate&quot;&gt;azu/es-usage-rate&lt;/a&gt;というツールを書いた。&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -g es-usage-rate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;使い方&quot;&gt;使い方&lt;/h3&gt;

&lt;p&gt;例えば、&lt;code&gt;es-usage-rate&lt;/code&gt;自体がどういう構文を使って書かれてるかを見てみてます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;es-usage-rate&lt;/code&gt;は他のCLIと組み合わせて使う事を前提としてるので、
デフォルトでは指定したコードをパースして、それらのAST Node typeを出力するだけです。&lt;/p&gt;

&lt;p&gt;AST Node typeは以下を参照すると分かりますが、ECMAScriptの構文の名前が入ってる感じです。
(Generatorとかはtypeとしてはないので独自に出してます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/estree/estree&quot; title=&quot;estree/estree: The ESTree Spec&quot;&gt;estree/estree: The ESTree Spec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;es-usage-rate &lt;span class=&quot;s2&quot;&gt;&amp;quot;es-usage-rate/src/**/*.js&amp;quot;&lt;/span&gt;
ImportDeclaration
AssignmentExpression
Identifier
CallExpression
Identifier
Identifier
CatchClause
....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意点としては、AST Node typeというのは基本的には構文にしか&lt;code&gt;type&lt;/code&gt;がついてません。
例えば、&lt;code&gt;Promise&lt;/code&gt;とか構文としては新しいものではなくただのオブジェクトなので、&lt;code&gt;type&lt;/code&gt;だけでは区別できないと思います。
(名前などを見れば判定はできますが面倒なのでやってないです)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;es-usage-rate&lt;/code&gt;を使えば標準出力には&lt;code&gt;type&lt;/code&gt;が出現した回数だけ出力されるので、これを&lt;a href=&quot;https://github.com/philovivero/distribution&quot; title=&quot;philovivero/distribution&quot;&gt;distribution&lt;/a&gt;で集計して見たりするのが簡単な使い方です。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/azu/es-usage-rate.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;es-usage-rate &lt;span class=&quot;s2&quot;&gt;&amp;quot;es-usage-rate/src/**/*.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; distribution --char&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ba --height&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;50
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
               Identifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;334&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.70%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
            StringLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;84&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;9.48%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬
           CallExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;61&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.88%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬
         MemberExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;55&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.21%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
           BlockStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;38&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.29%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
       VariableDeclarator&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;34&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.84%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
          ReturnStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;26&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;25&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.82%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
      FunctionDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.03%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;17&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.92%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
      ExpressionStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.69%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
           ObjectProperty&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.69%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
                Directive&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.58%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
                  Program&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.58%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
         DirectiveLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.58%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.35%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
         ObjectExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.35%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
     AssignmentExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.02%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.02%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.90%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.79%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
         BinaryExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.79%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
              IfStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.68%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.56%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
           NumericLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
          ArrayExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
  VariableDeclaration:var&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.34%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.34%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
           BreakStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.23%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
        AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.23%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
               SwitchCase&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.23%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
         UpdateExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
          UnaryExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
             ObjectMethod&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
            RegExpLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
          SwitchStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
              CatchClause&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
             ForStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
           BooleanLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
             TryStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
           ThrowStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
            NewExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
 ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ターミナルでのグラフ表示に&lt;a href=&quot;https://github.com/philovivero/distribution&quot; title=&quot;philovivero/distribution&quot;&gt;philovivero/distribution&lt;/a&gt;を使うと便利です。&lt;/p&gt;

&lt;p&gt;全部を出すとちょっと多いので、ES6の構文だけに絞ってみます。
&lt;code&gt;es-usage-rate&lt;/code&gt;は&lt;code&gt;--reducer&lt;/code&gt;で任意のフィルターファイル処理を指定できるので、ビルトインしてある&lt;code&gt;es6&lt;/code&gt;を指定します。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;es-usage-rate --reducer es6  &lt;span class=&quot;s2&quot;&gt;&amp;quot;es-usage-rate/src/**/*.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; distribution --char&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ba
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;24.51%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.76%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.82%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.82%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7.84%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.86%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.90%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.94%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.94%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
        AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
 ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ES6のうち、&lt;code&gt;import&lt;/code&gt;と&lt;code&gt;export&lt;/code&gt;のみを比較してみたいなら、&lt;code&gt;distribution&lt;/code&gt;に渡す前にgrepすることでできます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;es-usage-rate --reducer es6  &lt;span class=&quot;s2&quot;&gt;&amp;quot;es-usage-rate/src/**/*.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;Import&amp;quot;&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;Export&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; distribution --char&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ba
                     Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
       ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;33.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
         ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17.65%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17.65%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;15.69%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.73%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当たり前な感じはしますが、&lt;code&gt;import&lt;/code&gt;の方が&lt;code&gt;export&lt;/code&gt;より使われているという結果が見えました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;es-usage-rate&lt;/code&gt;は大した処理をしてなくて、&lt;code&gt;--formatter&lt;/code&gt;、&lt;code&gt;--reducer&lt;/code&gt;、&lt;code&gt;--mapper&lt;/code&gt;の引数で指定したスクリプトを組み合わせて欲しい形で、コードをパースした結果を吐くためのツールです。
(&lt;code&gt;reduce&lt;/code&gt;のシグネチャがイマイチなので変えるかも)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;parse(Code) =&amp;gt; AST&lt;/li&gt;
&lt;li&gt;map(AST) =&amp;gt; Nodes&lt;/li&gt;
&lt;li&gt;reduce(Nodes) =&amp;gt; Nodes&lt;/li&gt;
&lt;li&gt;format(Nodes) =&amp;gt; result!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;使われているes6の構文を見ていく&quot;&gt;使われているES6の構文を見ていく&lt;/h2&gt;

&lt;p&gt;あるコードで、どれくらいES6の構文が使われているのか、またどういう構文の使用率が高いのか、
ということを調べたくて&lt;a href=&quot;https://github.com/azu/es-usage-rate&quot; title=&quot;azu/es-usage-rate&quot;&gt;es-usage-rate&lt;/a&gt;を書きました。&lt;/p&gt;

&lt;p&gt;なので、実際に調べて行ってみます。&lt;/p&gt;

&lt;p&gt;ES6で書かれていて、いろんな人が同じものを書いてるサンプルとして以下のFlux実装比較を使ってみます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/staltz/flux-challenge&quot; title=&quot;flux-challenge&quot;&gt;flux-challenge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;git clone https://github.com/staltz/flux-challenge.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;flux-challeng/submissions
&lt;span class=&quot;c&quot;&gt;# 人別に見ていく&lt;/span&gt;
find . ! -path . -type d -maxdepth &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xargs -I &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;  ksh -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;echo {}; es-usage-rate &amp;quot;{}/**/*.js&amp;quot; --reducer es6 2&amp;gt; /dev/null  | distribution --char=ba&amp;#39;&lt;/span&gt;
./abaran
                     Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
         ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;18.99%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;15.19%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
       ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.92%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12.66%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12.66%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
               ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12.66%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
           ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
       AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.27%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
./arqex
                     Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
       ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;33.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;31.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.89%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬
               ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.89%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬
 ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.44%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬
         ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.22%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
./ds300
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;57.14%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;35.71%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7.14%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬
./fab1an
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;66.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.11%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.56%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.56%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
./garbles
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;33.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;27.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17.65%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17.65%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.92%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
./hyperturtle
./jas-chen
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;35.89%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12.92%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12.92%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12.44%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.22%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.26%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.26%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.87%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.87%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
        AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
         ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
                ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
 ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.48%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
./jelz
./jollytoad
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;66&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.29%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;29.94%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;18.64%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.95%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.39%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
              RestElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.82%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.56%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
./josepot
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;54&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;21.09%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;15.62%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;15.23%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.55%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;23&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7.03%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.47%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.52%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.12%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.73%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.34%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
         ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.56%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
                ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.56%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
        AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.17%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
./kyldvs
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;23.31%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;21.05%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;18.05%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.53%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.02%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.02%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.76%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
         ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.01%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬
                ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.01%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.50%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.75%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
./leoasis
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;19.80%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17.82%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16.83%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.88%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.91%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.94%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.97%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
         ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.97%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
                ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.97%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
        AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
./masiulis
./mattjbray
./milankinen
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;34.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;25.37%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14.93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.94%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.96%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.48%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬
./mweststrate
./mynomoto
./pasieronen
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;26.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;21.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.00%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬
 ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.67%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
              RestElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
             ArrayPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
          ExportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.33%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
./pindia
./retozi
./salsita
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;99&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;30.09%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;83&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;25.23%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;54&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16.41%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;38&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.55%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ImportNamespaceSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;22&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.69%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.34%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.13%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.82%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.22%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.91%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.30%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
  VariableDeclaration:let&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.30%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬
./staltz
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;29.85%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;26.12%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14.18%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.19%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.97%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.48%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
          TemplateElement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.48%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
          TemplateLiteral&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.24%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬
            ObjectPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.49%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬
./stinson7
./winstonewert
                      Key&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;Ct &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pct&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    Histogram
  ArrowFunctionExpression&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;24.14%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
        ImportDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20.69%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
   ImportDefaultSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.79%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ExportDefaultDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.90%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬
          ImportSpecifier&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.90%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬
   ExportNamedDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.90%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬
        AssignmentPattern&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.90%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬▬▬▬▬▬▬
           ForOfStatement&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
VariableDeclaration:const&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
         ClassDeclaration&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
                ClassBody&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.45%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ▬▬▬▬▬▬▬
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意点としては、&lt;code&gt;if&lt;/code&gt;とか&lt;code&gt;var&lt;/code&gt;などの方が&lt;code&gt;class&lt;/code&gt;などより出現率が高いのは当たり前なので、
単純にランキングとして見ると少し観点としてズレがある気がします。&lt;/p&gt;

&lt;p&gt;人別の結果を重ねて見たいので、ちょっと縦長だと見えにくい気がします。&lt;/p&gt;

&lt;p&gt;とりあえず&lt;a href=&quot;https://github.com/azu/es-usage-rate/blob/master/src/formatters/json-by-all.js&quot; title=&quot;json-by-all&quot;&gt;json-by-all&lt;/a&gt;というformatterを書いたので、これを元にCSV化してみてNumbersでグラフにしてみます。
(Rとかそういうので処理したかったけど、簡単な方法が欲しい…)&lt;/p&gt;

&lt;p&gt;標準入力の文字列を既存のJSON配列に追記していく&lt;a href=&quot;https://github.com/azu/json-append&quot; title=&quot;json-append&quot;&gt;json-append&lt;/a&gt;というも書いたので、以下のようにすれば、それぞれの人(ディレクトリ)ごとの集計結果を得られます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;find . ! -path . -type d -maxdepth &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xargs -I &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;  ksh -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;echo {}; es-usage-rate &amp;quot;{}/**/*.js&amp;quot; --reducer es6 --formatter json-by-all  | json-append results.json&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでJSONとして集計結果が手に入ったので、これをCSVにしてExcelとかで読み込ませてみます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./abaran/src/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;AssignmentPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportNamespaceSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./arqex/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./ds300/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./fab1an/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./garbles/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateLiteral&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./jas-chen/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportNamespaceSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;AssignmentPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./jelz/resources/public/js/app.js&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./jollytoad/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;RestElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateLiteral&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./josepot/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateLiteral&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;AssignmentPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./kyldvs/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./leoasis/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateLiteral&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;AssignmentPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./mattjbray/dist/app.js&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./milankinen/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./mweststrate/dist/bundle.js&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./mynomoto/index.html.js&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./pasieronen/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportNamespaceSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;RestElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrayPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./pindia/reflux.min.js&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./retozi/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./salsita/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportNamespaceSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateLiteral&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:let&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./staltz/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateLiteral&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TemplateElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ObjectPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;@file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./winstonewert/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportDefaultSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportNamedDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ArrowFunctionExpression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ImportSpecifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;VariableDeclaration:const&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;AssignmentPattern&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ExportDefaultDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassDeclaration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ClassBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ForOfStatement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JSON to CSVをするには&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zemirco/json2csv#command-line-interface&quot; title=&quot;json2csv&quot;&gt;json2csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://konklone.io/json/&quot; title=&quot;JSON to CSV&quot;&gt;JSON to CSV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などが使えます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;json2csv -i results.json -o results.csv
&lt;span class=&quot;c&quot;&gt;# 何か要素が消える気がする… &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Numbersで読み込んで積み重ね棒グラフにしてみました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/wp-content/uploads/2016/01/22-1453435236.png&quot;&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2016/01/22-1453435236.png&quot; alt=&quot;graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;先ほども書いたように 数が多い ≠ 使われる頻度が高い なので、
大して意味のないグラフです。(どういうグラフ使うのがいいんだろ?)&lt;/p&gt;

&lt;p&gt;カラフル具合から&lt;code&gt;ArrowFunctionExpression&lt;/code&gt; (Arrow Function)や&lt;code&gt;const&lt;/code&gt;はやっぱり使われてるなーとか、
&lt;code&gt;require&lt;/code&gt;でもいいはずだけど&lt;code&gt;import&lt;/code&gt;を使ってる人も多いなどがわかった気がします。&lt;/p&gt;

&lt;p&gt;この辺は題材によるので、色々なものを見てみると面白い発見があるかもしれません。&lt;/p&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;コードを分解して解析する&lt;a href=&quot;https://github.com/azu/es-usage-rate&quot; title=&quot;azu/es-usage-rate&quot;&gt;azu/es-usage-rate&lt;/a&gt;を作った&lt;/li&gt;
&lt;li&gt;ES6のサンプルコードとして&lt;a href=&quot;https://github.com/staltz/flux-challenge&quot; title=&quot;staltz/flux-challenge: A frontend challenge to test UI architectures and solutions&quot;&gt;staltz/flux-challenge: A frontend challenge to test UI architectures and solutions&lt;/a&gt;を見た&lt;/li&gt;
&lt;li&gt;人/ライブラリによって使う機能が結構違うことがわかった&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 22 Jan 2016 13:09:00 +0900</pubDate>
        <link>http://efcl.info/2016/01/22/es-usage-rate/</link>
        <guid isPermaLink="true">http://efcl.info/2016/01/22/es-usage-rate/</guid>
        
        <category>ECMAScript</category>
        
        <category>Tool</category>
        
        <category>ES6</category>
        
        <category>JavaScript</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>JSer.info 5周年記念イベント アウトラインメモ</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://jser.connpass.com/event/24202/&quot; title=&quot;JSer.info 5周年記念イベント&quot;&gt;JSer.info 5周年記念イベント&lt;/a&gt;を開催&amp;amp;参加してきたのでメモ。&lt;/p&gt;

&lt;p&gt;スライドとかの概要は以下にも書いてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/2016/01/16/jser-5years/&quot;&gt;JSer.info 5周年記念イベントを開催しました - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://togetter.com/li/926573&quot;&gt;JSer.info 5周年記念イベント - Togetterまとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下メモ書きです。&lt;/p&gt;

&lt;h2 id=&quot;jser.info-5周年---@azu_re&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/jser.info.html&quot; title=&quot;JSer.info 5周年&quot;&gt;JSer.info 5周年&lt;/a&gt; - @azu_re&lt;/h2&gt;

&lt;p&gt;5年間での総計は以下のような感じになりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;投稿記事数: 261&lt;/li&gt;
&lt;li&gt;毎週1回投稿: (261*7) / 365 ≒ 5(年)&lt;/li&gt;
&lt;li&gt;合計紹介URL数: 6312&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;javascript情報って何だっけ?---@azu_re&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/javascript-information.html&quot;&gt;JavaScript情報って何だっけ?&lt;/a&gt; - @azu_re&lt;/h2&gt;

&lt;p&gt;そもそもなんでJavaScriptについて知りたいのという話。
後で別記事書くかも&lt;/p&gt;

&lt;h2 id=&quot;angularの5年とこれから---@armorik83&quot;&gt;&lt;a href=&quot;https://speakerdeck.com/armorik83/angularfalse5nian-tokorekara&quot; title=&quot;Angularの5年とこれから&quot;&gt;Angularの5年とこれから&lt;/a&gt; - @armorik83&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Angularも変化が大きい&lt;/li&gt;
&lt;li&gt;フロントエンドの歴史とバインディングの歴史&lt;/li&gt;
&lt;li&gt;Ajax + jQueryを始めとすると技術&lt;/li&gt;
&lt;li&gt;Backbone.js MV*architectureの提案&lt;/li&gt;
&lt;li&gt;AngularJS双方向データバインディング

&lt;ul&gt;
&lt;li&gt;DI&lt;/li&gt;
&lt;li&gt;双方向データバインディング&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AngularJSの弱点の顕在化

&lt;ul&gt;
&lt;li&gt;冗長なDirty Checkingが問題視される&lt;/li&gt;
&lt;li&gt;React 仮想DOM&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Angular beta 0リリース

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@input&lt;/code&gt;、&lt;code&gt;@output&lt;/code&gt;というAPI&lt;/li&gt;
&lt;li&gt;Component間のデータ、イベントバンディングを整合化&lt;/li&gt;
&lt;li&gt;下から来た情報をバブリングじゃなくて&lt;code&gt;output&lt;/code&gt;という属性にいれて&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;TypeScript前提、

&lt;ul&gt;
&lt;li&gt;型情報、型アノテーション&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Change Detection

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/laco0416/items/78edd53f5da8ead02e75&quot; title=&quot;Angular2のChange Detectionについて - Qiita&quot;&gt;Angular2のChange Detectionについて - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ngAnimate&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;引き続きサポート&lt;/li&gt;
&lt;li&gt;スコープをコンポーネント内に限定出来る&lt;code&gt;Style&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AngularJSの互換性

&lt;ul&gt;
&lt;li&gt;ngUpdate

&lt;ul&gt;
&lt;li&gt;プロセスの名前&lt;/li&gt;
&lt;li&gt;Misko Hveryによるもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;1.xのなかで2を使う方法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Offline Compiled Template

&lt;ul&gt;
&lt;li&gt;独特なHTMLで表記できるAngular&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Angular Universal

&lt;ul&gt;
&lt;li&gt;ブラウザとNode.jsの両方で動くJS&lt;/li&gt;
&lt;li&gt;サーバサイドレンダリングをDOMRendererとServerDOMRendererの切り替えで出来る&lt;/li&gt;
&lt;li&gt;SEO対応とかも&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Web Workers

&lt;ul&gt;
&lt;li&gt;Angular 2のほぼ全てのコードをWeb Workers上で実行する仕組み&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AngularDart

&lt;ul&gt;
&lt;li&gt;Dartの資産&lt;/li&gt;
&lt;li&gt;Angular 2のマイクロタスクキュー Zone.js&lt;/li&gt;
&lt;li&gt;TypeScriptで利用可能になった Decorators構文&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;情報源

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ng2-info.github.io/&quot; title=&quot;Angular2 Info&quot;&gt;Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Angular 1のメンテンス期間

&lt;ul&gt;
&lt;li&gt;みんなが使わなくなるまでメンテする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webidlを見てみる---@takenspc&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/takenspc/webidl&quot; title=&quot;WebIDLを見てみる&quot;&gt;WebIDLを見てみる&lt;/a&gt;  - @Takenspc&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ブラウザに実装されてるWeb IDLを見てみる&lt;/li&gt;
&lt;li&gt;ブラウザで使えるAPI: 沢山ある

&lt;ul&gt;
&lt;li&gt;新たなAPIが生まれる&lt;/li&gt;
&lt;li&gt;途中でAPIが変わる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;実際に使えるAPIは何なのか、知りたい&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;ブラウザの実装とドキュメントが分離されてる

&lt;ul&gt;
&lt;li&gt;別々にメンテナンスされてる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;自分が欲しいと思っている粒度なのか頻度は別になってる&lt;/li&gt;
&lt;li&gt;ブラウザの実装ってだけが書いているのか?

&lt;ul&gt;
&lt;li&gt;誰かが何かを元に書いている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;各種ブラウザはWebIDLからインタフェースを機械生成している&lt;/li&gt;
&lt;li&gt;WebIDLがブラウザと仕様を結ぶもの。&lt;/li&gt;
&lt;li&gt;ブラウザと仕様での共通言語の1つ

&lt;ul&gt;
&lt;li&gt;共通言語なので比較が出来る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WebIDLを比較して見てみるという話&lt;/li&gt;
&lt;li&gt;FirefoxでChromeでIDLの使い方が違う&lt;/li&gt;
&lt;li&gt;WebIDLを比較するには

&lt;ul&gt;
&lt;li&gt;継承や&lt;code&gt;[&lt;/code&gt;　Extended attributes &lt;code&gt;]&lt;/code&gt; をなどがある&lt;/li&gt;
&lt;li&gt;これらを正規化する必要がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;まとめ

&lt;ul&gt;
&lt;li&gt;WebIDLはしようとブラウザーの共通言語の1つ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;[ie8枠]-ぼくたちの愛したie8---@hasegawayosuke&quot;&gt;[IE8枠] ぼくたちの愛したIE8 - @hasegawayosuke&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;XSSでalert出すためにJavaScriptを覚えた&lt;/li&gt;
&lt;li&gt;IE8のすごい機能&lt;/li&gt;
&lt;li&gt;XSSフィルター

&lt;ul&gt;
&lt;li&gt;リクエストとレスポンスを比較 スクリプトがあったら実行を阻止&lt;/li&gt;
&lt;li&gt;保守的なのに大胆な機能&lt;/li&gt;
&lt;li&gt;XSSフィルターを使ってXSS&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;XDomainRequest

&lt;ul&gt;
&lt;li&gt;クロスオリジンで使えるXHRモドキ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;toStaticHTML

&lt;ul&gt;
&lt;li&gt;いい感じに安全なHTMLにしてくれる&lt;/li&gt;
&lt;li&gt;HTMLメールとかMarkdownなどで使える&lt;/li&gt;
&lt;li&gt;細かい指定ができない&lt;/li&gt;
&lt;li&gt;他のブラウザでは簡単な代替方法がない

&lt;ul&gt;
&lt;li&gt;DOMPurifyなど&lt;/li&gt;
&lt;li&gt;HTML5 iframe sandbox&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;標準化もされていないのであんまり使われない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;X-Content-Type-Options

&lt;ul&gt;
&lt;li&gt;Content-Typeに従うようになる&lt;/li&gt;
&lt;li&gt;普通の挙動&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;X-Frame-Options

&lt;ul&gt;
&lt;li&gt;クリックジャッキングへの対応&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;[ie8枠]-active-scripting---@makoto_kato&quot;&gt;[IE8枠] &lt;a href=&quot;http://www.slideshare.net/djraven/active-scripting&quot; title=&quot;Active scripting&quot;&gt;Active scripting&lt;/a&gt; - @makoto_kato&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;IE4-8のアーキテクチャ

&lt;ul&gt;
&lt;li&gt;COM API&lt;/li&gt;
&lt;li&gt;Browser Helper Object(BHO) API for ブラウザ拡張&lt;/li&gt;
&lt;li&gt;プラガブルなプロトコル&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Active Scription

&lt;ul&gt;
&lt;li&gt;COM I/Fバインディングエンジン&lt;/li&gt;
&lt;li&gt;For Engine API&lt;/li&gt;
&lt;li&gt;For Host API - サードパーティでも使える&lt;/li&gt;
&lt;li&gt;IE3-8&lt;/li&gt;
&lt;li&gt;WSH&lt;/li&gt;
&lt;li&gt;IIS&lt;/li&gt;
&lt;li&gt;Office&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;バックエンドも色々

&lt;ul&gt;
&lt;li&gt;MS

&lt;ul&gt;
&lt;li&gt;JScript&lt;/li&gt;
&lt;li&gt;VBScript&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3Party

&lt;ul&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Perl&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;etc..&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;サードパーティアプリでIEのセキュリティホールを作れる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;COM Interfaces

&lt;ul&gt;
&lt;li&gt;IE IDispatchEx&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;非同期イベントがんばるぞい---@saneyuki_s&quot;&gt;非同期イベントがんばるぞい - @saneyuki_s&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;イベント

&lt;ul&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;Domain&lt;/li&gt;
&lt;li&gt;File I/O&lt;/li&gt;
&lt;li&gt;Net work I/O&lt;/li&gt;
&lt;li&gt;等色々イベントがある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;イベントの依存関係の管理が面倒問題&lt;/li&gt;
&lt;li&gt;FRP&lt;/li&gt;
&lt;li&gt;何でイベントを待ち受けられないの?&lt;/li&gt;
&lt;li&gt;Duality

&lt;ul&gt;
&lt;li&gt;PullとPush型&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;イベントは何で&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;にするのか

&lt;ul&gt;
&lt;li&gt;一回しか来ないイベント&lt;/li&gt;
&lt;li&gt;複数回来るイベント&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Promiseは基本的に1回のイベント(使い捨て)&lt;/li&gt;
&lt;li&gt;複数回のイベントに対応するためにObservableという考え方の話&lt;/li&gt;
&lt;li&gt;FRPとは?

&lt;ul&gt;
&lt;li&gt;FRPとRxは別の動物であるという話&lt;/li&gt;
&lt;li&gt;似たような仕組みだけど違うもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jafar Husain

&lt;ul&gt;
&lt;li&gt;.NetのものをJSにもってきた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;イベント文字列を機械的に考えられるようになった

&lt;ul&gt;
&lt;li&gt;パースしてASTで処理出来るようなイベントの流れ&lt;/li&gt;
&lt;li&gt;イベントのgotoみたいなものじゃなくてもっと宣言的な流れ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;How abstract RPC call

&lt;ul&gt;
&lt;li&gt;イベントをRPCのようなものだと考える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;RPCのコンセプト

&lt;ul&gt;
&lt;li&gt;Address どこへ&lt;/li&gt;
&lt;li&gt;Protocol どうやって&lt;/li&gt;
&lt;li&gt;Data type どういう値を渡して、どういう値を返すか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;根本的な哲学は再利用が可能である

&lt;ul&gt;
&lt;li&gt;ABC(Address &amp;amp; Protocol &amp;amp; Data typeと同じ)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;これはFlux

&lt;ul&gt;
&lt;li&gt;ActionとDispatcherと似た感じ&lt;/li&gt;
&lt;li&gt;Actionはイベントをオブジェクトとして名前を付けた感じ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-on-現場---@mizchi&quot;&gt;React on 現場 - @mizchi&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;あるいはModern JavaScript on Rails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;モダンJSとは&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;npm/Browserify&lt;/li&gt;
&lt;li&gt;Babel/ES2015&lt;/li&gt;
&lt;li&gt;React/Fux&lt;/li&gt;
&lt;li&gt;Testable&lt;/li&gt;
&lt;li&gt;No more jQuery plugins&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という構成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使われてないものを捨てるのは簡単&lt;/li&gt;
&lt;li&gt;でも使われてると書き換えないと行けないので辛い&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;何か良くしてくれ - 方針&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;再利用できるものと再利用出来るものを分ける&lt;/li&gt;
&lt;li&gt;エディタの書き換えへの挑戦

&lt;ul&gt;
&lt;li&gt;コード量が多い&lt;/li&gt;
&lt;li&gt;Kobitoとかやってたのでノウハウ活かせるかも&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;破綻

&lt;ul&gt;
&lt;li&gt;分量&lt;/li&gt;
&lt;li&gt;ドメイン知識が色々必要&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;教訓

&lt;ul&gt;
&lt;li&gt;仕様を理解してないものはコード書けない&lt;/li&gt;
&lt;li&gt;モジュールの境界面が明示されてないものは分解できない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ゴールの設定

&lt;ul&gt;
&lt;li&gt;新規モジュールを負債を引き継ぐことなく受け入れられる環境&lt;/li&gt;
&lt;li&gt;Turbolinksが導入可能な初期化フロー

&lt;ul&gt;
&lt;li&gt;Turbolinkは初期化フローの制御ができてないと行けない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;やったこと

&lt;ul&gt;
&lt;li&gt;npmに依存ライブラリを集約

&lt;ul&gt;
&lt;li&gt;ライブラリごとに異なるCDNを参照&lt;/li&gt;
&lt;li&gt;オーバーヘッドが大きい&lt;/li&gt;
&lt;li&gt;どのライブラリを使ってるか分からない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;npmとbowerでライブラリの依存を解決

&lt;ul&gt;
&lt;li&gt;npmを優先的に使う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Browserify導入

&lt;ul&gt;
&lt;li&gt;Sprocketsを捨てる&lt;/li&gt;
&lt;li&gt;Rails上のデファクトモジュールシステム&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sprocketsの問題

&lt;ul&gt;
&lt;li&gt;ファイルスコープで返り値を持てない&lt;/li&gt;
&lt;li&gt;Nodeで動かない&lt;/li&gt;
&lt;li&gt;RubyとJSの問題切り分けられない&lt;/li&gt;
&lt;li&gt;JavaScriptのエコシステムに乗れない&lt;/li&gt;
&lt;li&gt;Sprocketsで動くJS系のgemメンテされない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;書き換える

&lt;ul&gt;
&lt;li&gt;分量が多い&lt;/li&gt;
&lt;li&gt;平行して開発している機能が沢山あってコンフリクトする&lt;/li&gt;
&lt;li&gt;スクリプトを書いて一発&lt;/li&gt;
&lt;li&gt;全てのモジュールをCommonJS形式に書き換えた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Browserifyによって変わったこと

&lt;ul&gt;
&lt;li&gt;依存がそれぞれのファイルで完結した状態になる&lt;/li&gt;
&lt;li&gt;単体テスト可能な閉じた参照の提供&lt;/li&gt;
&lt;li&gt;名前空間の初期化順に左右されない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;gulp

&lt;ul&gt;
&lt;li&gt;browserify-rails

&lt;ul&gt;
&lt;li&gt;中ではbrowserify-incrementalを使ってる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Babel

&lt;ul&gt;
&lt;li&gt;Babelのロード時間が長い&lt;/li&gt;
&lt;li&gt;プロセスを毎回立てると、毎回読み込みが起きてしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テスト

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;require.cache&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;React化

&lt;ul&gt;
&lt;li&gt;Qiitaのヘッダー&lt;/li&gt;
&lt;li&gt;Fluxの選定が面倒だったのでベタ書き&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mizchi/items/79673c4d406cc85b44aa&quot; title=&quot;redux への 不満を解消する為に, flumptというFlux実装を作った - Qiita&quot;&gt;redux への 不満を解消する為に, flumptというFlux実装を作った - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FluxはアプリケーションRootを管理するものが多いので、小さくPub/Subしたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;react-unit

&lt;ul&gt;
&lt;li&gt;ReactのshaddlowRenderのラッパー&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;まとめ

&lt;ul&gt;
&lt;li&gt;必要なのは「仕様理解」と「勇気」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-discussion&quot;&gt;JavaScript Discussion&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://app.sli.do/event/0egbwyxz/ask&quot;&gt;&lt;img src=&quot;https://monosnap.com/file/z2VC0MmCQKox5DjQXlvOpNaYQjVhum.png&quot; alt=&quot;discussion&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://app.sli.do/event/0egbwyxz/ask&quot; title=&quot;[JSer.info] JavaScript Discussion(JavaScriptの良い所/悪い所/気になる事)&quot;&gt;[JSer.info] JavaScript Discussion(JavaScriptの良い所/悪い所/気になる事)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を元に議論&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JSはいつ無くなるのか。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ウェブが死ぬまで?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;モダンなJSの構成で開発したらこんなに良いことがありました！儲かりました！みたいな話が、もっと世の中に出回ると良いと思っています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;modern JavaScript に変えてサーバーの転送量が減った &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; kiyoshi nomo (@kysnm) &lt;a href=&quot;https://twitter.com/kysnm/status/688287820717281280&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;WebGLって流行るの？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;WebGLは使われるようになる。(WebGL自体というよりはそれを利用したものが使われてる)&lt;/p&gt;

&lt;p&gt;WebGL流行る = SVG流行る&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;IE6,7,8 のサポートはもう切ってもいいですか……?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;プロダクトはプロダクト次第&lt;/li&gt;
&lt;li&gt;ライブラリは切る+shim入れれば動くという形にする例

&lt;ul&gt;
&lt;li&gt;サポート切るのはmajorアップデートなのか(コードは変化してないが)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;O.o とは何だったのか&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;顔文字&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;jQueryって皆使ってるの？バージョンは？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;jQuery自体を使ってる人が全体の半分以下ぐらい。&lt;/p&gt;

&lt;p&gt;バージョン&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;9割が1.x系。&lt;/li&gt;
&lt;li&gt;1割が2.x/3.x系&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;JavaScriptがコンパイル言語っぽくなってるのはどうやったら解決するのかな?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ECMAScriptの新しい機能を試すのにビルドツールとかが必要みたいな話。
いろんなところでビルドツールが必要になる。&lt;/p&gt;

&lt;p&gt;言語にマクロのような機能がないので、こういったTranspilerは仕様と実装の緩衝材となるため重要という話。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;使用したフィードバックを渡せるので開発者と使用者の溝を埋めれる。だから現在のbabelによるトランスパイルが重要という考えすごい &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; rChaser53 (@rChaser53) &lt;a href=&quot;https://twitter.com/rChaser53/status/688299229157011457&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;hasegawayusuke さんへ electron XSS の怖いところを伝えて下さい&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ElectronでXSSが起きると、任意のコード実行ができてしまう問題について&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;いつになったらFlashを超えられるのか。足りないものは何か？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;JSがFlashを超えるのに足りないものはなにか？&amp;#10;→GUIエディタがない&amp;#10;それっぽいのはたまにぽつぽつでてくるけど大きくならない &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; よしこ (@yoshiko_pg) &lt;a href=&quot;https://twitter.com/yoshiko_pg/status/688299239495999488&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;chrome-api-#jserinfo---kyo_ago&quot;&gt;&lt;a href=&quot;http://0-9.sakura.ne.jp/pub/lt/JSerInfo20160116/start.html&quot; title=&quot;Chrome API #jserinfo&quot;&gt;Chrome API #jserinfo&lt;/a&gt; - kyo_ago&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension/OSのAPIについて&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;railsのrailから解放される始めの一歩---joe-re&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/masatonoguchi169/railsrails-57123076&quot; title=&quot;RailsのRailから解放される始めの一歩&quot;&gt;RailsのRailから解放される始めの一歩&lt;/a&gt; - joe-re&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/joe-re/items/1d5e1d0527cc439e03ef&quot; title=&quot;Rails - フロントエンド開発における革命とビルドプロセスについて - Qiita&quot;&gt;Rails - フロントエンド開発における革命とビルドプロセスについて - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sprockets捨てたい理由&lt;/li&gt;
&lt;li&gt;Railsのfingerprintの解決が難しい&lt;/li&gt;
&lt;li&gt;まだ app/asset に成果物を吐いてる&lt;/li&gt;
&lt;li&gt;Reduxはロックイン感があるので、&lt;a href=&quot;https://facebook.github.io/flux/docs/flux-utils.html&quot; title=&quot;Flux Utils&quot;&gt;Flux Utils&lt;/a&gt;を使うという話&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://joe-re.hatenablog.com/entry/2016/01/17/151923&quot; title=&quot;JSer.info 5周年記念イベントに行ってきた(LTもした) #jserinfo - Please Drive Faster&quot;&gt;JSer.info 5周年記念イベントに行ってきた(LTもした) #jserinfo - Please Drive Faster&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-eps---@yosuke_furukawa&quot;&gt;&lt;a href=&quot;https://speakerdeck.com/yosuke_furukawa/nodeeps&quot; title=&quot;nodeeps // Speaker Deck&quot;&gt;node-eps&lt;/a&gt; - @yosuke_furukawa&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node-eps&quot; title=&quot;Node.js Enhancement Proposals&quot;&gt;Node.js Enhancement Proposals&lt;/a&gt;について&lt;/li&gt;
&lt;li&gt;C++ Streams&lt;/li&gt;
&lt;li&gt;ES6 Modules interop

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1tXziuBheum53jk-FgtFkEUGKNVTdHzbpzhJLk7FatGc/present#slide=id.p&quot; title=&quot;ES6/WhatWG Loader &amp;amp;amp; Node - Google スライド&quot;&gt;ES6/WhatWG Loader &amp;amp; Node - Google スライド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Node/ES6 どっちからも読めるようにするという&lt;/li&gt;
&lt;li&gt;JSのレイヤーじゃなくて、C++のレイヤーでfallbackさせてtryする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sc22-ecmascript-ad-hoc委員会---@azu_re&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/sc22-ecmascript-ahodc.html&quot; title=&quot;SC22 ECMAScript Ad hoc委員会&quot;&gt;SC22 ECMAScript Ad hoc委員会&lt;/a&gt; - @azu_re&lt;/h2&gt;

&lt;p&gt;ISO/IEC 16262であるECMASCript仕様の策定プロセスやどういう活動をしてるかという話。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide-what-is-ecmascript/&quot; title=&quot;Introduction | ECMAScriptとは何か？&quot;&gt;Introduction | ECMAScriptとは何か？&lt;/a&gt;とはまた違う話です。&lt;/p&gt;

&lt;h2 id=&quot;ava---@t_wada&quot;&gt;AVA - @t_wada&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/ava&quot; title=&quot;sindresorhus/ava: Futuristic test runner&quot;&gt;sindresorhus/ava: Futuristic test runner&lt;/a&gt;について&lt;/li&gt;
&lt;li&gt;sindresorhusのオピニオンが強い話&lt;/li&gt;
&lt;li&gt;後発のTest Runnerは独自性を求められる&lt;/li&gt;
&lt;li&gt;テストケースのネストはnon support&lt;/li&gt;
&lt;li&gt;代わりに並列性&lt;/li&gt;
&lt;li&gt;ネストではなくファイルを分けろという方針&lt;/li&gt;
&lt;li&gt;power-assertがビルトイン&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ortcの話---jxck&quot;&gt;ORTCの話 - jxck&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openpeer/ortc&quot; title=&quot;openpeer/ortc&quot;&gt;openpeer/ortc&lt;/a&gt;のHTMLを修正してる話&lt;/li&gt;
&lt;li&gt;Bookflashの人がメイン

&lt;ul&gt;
&lt;li&gt;IETF系のプロトコルギークの人&lt;/li&gt;
&lt;li&gt;JavaScriptよくわからない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PRしまくる日々

&lt;ul&gt;
&lt;li&gt;PRしまくってたら「お前の方が上手く(Example)書けると思うけど?」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Exampleをどう書いていくのか

&lt;ul&gt;
&lt;li&gt;標準仕様なのでどう書けばいいのか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;将来的にWebRTCにマージ WebRTC NVになるかも&lt;/li&gt;
&lt;li&gt;Promiseも部分的に入ってる&lt;/li&gt;
&lt;li&gt;そもそもExampleの目的

&lt;ul&gt;
&lt;li&gt;APIの呼び出し方を例示する&lt;/li&gt;
&lt;li&gt;呼び出し順序を例示する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;参照される可能性が高い

&lt;ul&gt;
&lt;li&gt;本質はわかりやすく&lt;/li&gt;
&lt;li&gt;新しい機能を使うと記述が少なくて見やすい&lt;/li&gt;
&lt;li&gt;逆に「俺の知っているJSと違う」問題&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;どれくらいのレベルで書くのか?

&lt;ul&gt;
&lt;li&gt;仕様をどれくらいのJavaScriptで書くのか&lt;/li&gt;
&lt;li&gt;仕様書を読む人のレベル想定&lt;/li&gt;
&lt;li&gt;ExampleはMSEdgeで動くレベルのAPIで書くか&lt;/li&gt;
&lt;li&gt;let、Arrow Function、module、async await&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;お疲れ様でした。&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Jan 2016 16:42:00 +0900</pubDate>
        <link>http://efcl.info/2016/01/17/jserinfo-5years/</link>
        <guid isPermaLink="true">http://efcl.info/2016/01/17/jserinfo-5years/</guid>
        
        <category>JavaScript</category>
        
        <category>JSer</category>
        
        <category>イベント</category>
        
        
        <category>イベント</category>
        
      </item>
    
      <item>
        <title>textlintで文章カバレッジレポートを継続的に見ていく</title>
        <description>&lt;h2 id=&quot;文章カバレッジ&quot;&gt;文章カバレッジ&lt;/h2&gt;

&lt;p&gt;以前、&lt;a href=&quot;https://azu.gitbooks.io/nodefest-technical-writing/content/&quot; title=&quot;Introduction | 技術文書をソフトウェア開発する話&quot;&gt;技術文書をソフトウェア開発する話&lt;/a&gt;で&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;や&lt;a href=&quot;https://www.gitbook.com/&quot; title=&quot;GitBook · Writing made easy&quot;&gt;GitBook&lt;/a&gt;を使って文書を開発する方法についてお話しました。&lt;/p&gt;

&lt;p&gt;その時に、自然言語のチェックの自動化などはまだ色々考えられることがあるという話をしました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;文書のテストはまだまだ色々できることがある&lt;br&gt;
カバレッジを取るとかメトリクスを取るとか&lt;br&gt;
-- &lt;a href=&quot;https://azu.gitbooks.io/nodefest-technical-writing/content/slide/100.html&quot; title=&quot;まとめ1 | 技術文書をソフトウェア開発する話&quot;&gt;まとめ1 | 技術文書をソフトウェア開発する話&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;そこで文章のカバレッジというものを考えて実装してみました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;とコードカバレッジの仕組みを使ったものですが、こういうのをなんと呼べばいいのかよくわからなかったので、ここではとりあえず&amp;quot;文章カバレッジ&amp;quot;と読んでいます。&lt;/p&gt;

&lt;p&gt;textlintは全ての文に対してLintを実行するので命令網羅と近い感じがします。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;命令網羅（statement coverage：SC）&lt;br&gt;
コード内のすべての命令が少なくとも1回は実行されるようにテストを設計する。欠陥検出力は弱い
-- &lt;a href=&quot;http://www.itmedia.co.jp/im/articles/1111/07/news142.html&quot; title=&quot;情報システム用語事典：カバレッジ基準（かばれっじきじゅん） - ITmedia エンタープライズ&quot;&gt;情報システム用語事典：カバレッジ基準（かばれっじきじゅん） - ITmedia エンタープライズ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;よくよく考える仕組み的にカバレッジではないので、何か別の名前が必要な気がします。&lt;/p&gt;

&lt;h3 id=&quot;カバレッジ&quot;&gt;カバレッジ&lt;/h3&gt;

&lt;p&gt;具体例がないとイメージしにくいと思うので、&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture&quot; title=&quot;azu/JavaScript-Plugin-Architecture&quot;&gt;azu/JavaScript-Plugin-Architecture&lt;/a&gt;を例にしてみます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture&quot; title=&quot;azu/JavaScript-Plugin-Architecture&quot;&gt;JavaScript-Plugin-Architecture&lt;/a&gt;という文書では今回作ったtextlintの文章カバレッジを表示しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://codecov.io/github/azu/JavaScript-Plugin-Architecture?branch=master&quot;&gt;&lt;img src=&quot;https://codecov.io/github/azu/JavaScript-Plugin-Architecture/coverage.svg?branch=master&quot; alt=&quot;codecov.io&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://codecov.io/github/azu/JavaScript-Plugin-Architecture/branch.svg?branch=master&quot; alt=&quot;coverage graph&quot;&gt;&lt;/p&gt;

&lt;p&gt;textlintから既存のコードカバレッジのフォーマットである&lt;a href=&quot;http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php&quot;&gt;lcov&lt;/a&gt;を出力出来るようにしているので、Coverallsなどコードカバレッジサービスとそのまま連携することができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://coveralls.io/&quot;&gt;Coveralls - Test Coverage History &amp;amp; Statistics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;Codecov - Code Coverage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コマンドラインからもこのカバレッジを表示することができます。
lcovファイルを渡すとそのカバレッジを表示してくれる&lt;a href=&quot;https://github.com/azu/lcov-summary&quot; title=&quot;lcov-summary&quot;&gt;lcov-summary&lt;/a&gt;というCLIを書いたのでそれを利用しています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;npm run textlint:coverage

&amp;gt; javaScript-plugin-architecture@0.1.1 textlint:coverage /Users/azu/.ghq/github.com/azu/JavaScript-Plugin-Architecture
&amp;gt; summary-to-path &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xargs textlint -c coverage.textlintrc -f lcov &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; lcov-summary


Code Coverage Results:

 96.83% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;61/63&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; README.md
 92.59% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;25/27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ORGANIZATION.md
 97.60% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;122/125&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ja/jQuery/README.md
 96.45% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;299/310&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ja/ESLint/README.md
 95.59% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;195/204&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ja/connect/README.md
 96.38% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;293/304&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ja/gulp/README.md

Total Coverage:  96.32%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;仕組み&quot;&gt;仕組み&lt;/h2&gt;

&lt;p&gt;仕組みは意外と簡単で、既存のパーツを組み合わせて動くようにしました。&lt;/p&gt;

&lt;p&gt;textlintのLintの結果は&amp;quot;compact&amp;quot;, &amp;quot;checkstyle&amp;quot;, &amp;quot;jslint-xml&amp;quot;, &amp;quot;junit&amp;quot;, &amp;quot;tap&amp;quot;, &amp;quot;pretty-error&amp;quot;, &amp;quot;json&amp;quot;などの形式で出力できます。
それらに加えて、コードカバレッジのフォーマットである&lt;code&gt;lcov&lt;/code&gt;と&lt;code&gt;codecov&lt;/code&gt;を作りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-formatter-codecov&quot;&gt;azu/textlint-formatter-codecov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-formatter-lcov&quot;&gt;azu/textlint-formatter-lcov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/codecov-io/96e1addb96856a9034c2&quot; title=&quot;Codecov JSON&quot;&gt;Codecov JSON&lt;/a&gt;フォーマットは&lt;a href=&quot;https://codecov.io/&quot; title=&quot;Codecov&quot;&gt;Codecov&lt;/a&gt;用の形式ですが、他のコードカバレッジにはないメッセージ情報を含めることができます。&lt;/p&gt;

&lt;p&gt;これを利用すれば、Codecov上にカバレッジとメッセージ(Lintのエラーメッセージ)を表示することができます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://codecov.io/github/azu/JavaScript-Plugin-Architecture/ja/connect/README.md?ref=e2fabe23359c253760b48641ad464c79a4f483e9&quot;&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2016/01/12-1452563559.png&quot; alt=&quot;architecuture&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;カバレッジの結果として&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;textlintで問題がなかった行を1&lt;/li&gt;
&lt;li&gt;textlintで問題があった行を0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;としています。(マイナスとか小数点をサポートしてない場合もあるので1と0という風にしてます)&lt;/p&gt;

&lt;h2 id=&quot;文章カバレッジのモチベーション&quot;&gt;文章カバレッジのモチベーション&lt;/h2&gt;

&lt;p&gt;この仕組みのモチベーションについて書いておきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt;や&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;などのLint系に共通する話ですが、LintはCIに入れるとユニットテストに比べて、スタイルに近いチェックが多いためCIを落としやすいです。&lt;/p&gt;

&lt;p&gt;厳しいスタイルのチェックをLintで行うと毎回のようにCIが落とすので、厳しめのルールは入れにくい気がしています。&lt;/p&gt;

&lt;p&gt;Lintはエディタなどの書く環境に統合してリアルタイムでチェックするのが一般的だと思いますが、そうした場合でも厳しめのルールを一つ入れるだけで大量のエラーがでるため書くモチベーションを奪ってしまうことがあります。&lt;/p&gt;

&lt;p&gt;この場合、FAIL/PASSという極端な結果ではなく、WARNINGやINFOというようなレベルを間に入れることで解決するように思えますが、そういった情報に慣れてしまうと無視してしまうのが人間です。&lt;/p&gt;

&lt;p&gt;そのため、警告などの情報を上手く扱える必要があると思っていました。カバレッジは百分率で値がでるので、そういう中間的な状態を扱いやすいと思います。&lt;/p&gt;

&lt;p&gt;これを利用すると普通に書いてて落としてしまうような厳しめのルールが導入しやすいと思いました。&lt;/p&gt;

&lt;p&gt;例えば、&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture&quot; title=&quot;azu/JavaScript-Plugin-Architecture&quot;&gt;azu/JavaScript-Plugin-Architecture&lt;/a&gt;では通常全て通ってるべき&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture/blob/master/.textlintrc&quot; title=&quot;.textlintrc&quot;&gt;.textlintrc&lt;/a&gt;と厳しめのルールを採用した&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture/blob/master/coverage.textlintrc&quot; title=&quot;coverage.textlintrc&quot;&gt;coverage.textlintrc&lt;/a&gt;を使っています。&lt;/p&gt;

&lt;p&gt;カバレッジには&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture/blob/master/coverage.textlintrc&quot; title=&quot;coverage.textlintrc&quot;&gt;coverage.textlintrc&lt;/a&gt;を使ったtextlintの結果を&lt;a href=&quot;https://codecov.io/&quot; title=&quot;Codecov&quot;&gt;Codecov&lt;/a&gt;に送っています。&lt;/p&gt;

&lt;p&gt;こうすることで、普通に書いてると入れるのが難しいルールも取り入れやすくなり、後で&lt;a href=&quot;https://codecov.io/&quot; title=&quot;Codecov&quot;&gt;Codecov&lt;/a&gt;上で特定のファイルだけ妙に数値が落ちてることなどが発見できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://codecov.io/github/azu/JavaScript-Plugin-Architecture?branch=master&quot; title=&quot;azu/JavaScript-Plugin-Architecture@master&quot;&gt;azu/JavaScript-Plugin-Architecture@master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;チェック結果を継続的に数値化して見ることが出来ることを実現したくて、そういう仕組みを持っている既存のコードカバレッジの仕組みに乗ったという感じです。&lt;/p&gt;

&lt;p&gt;なのでやっぱりカバレッジではない気はしています。&lt;/p&gt;

&lt;p&gt;多分これはJenkinsで静的解析の警告数レポートを出すのと似たような話なのだと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/suzukij/20120611/1339368249&quot;&gt;Jenkinsを使って継続的に静的コード解析をさせる - suzukijの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://labs.opentone.co.jp/?p=735&quot;&gt;Jenkinsでカバレッジレポートや静的解析レポートを出力してみよう！Part1 | Opentone Labs.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;p&gt;使い方は単純でtextlintのformatterとして実装してあるので&lt;/p&gt;

&lt;p&gt;例えば、&lt;a href=&quot;https://github.com/azu/textlint-formatter-lcov&quot; title=&quot;azu/textlint-formatter-lcov&quot;&gt;textlint-formatter-lcov&lt;/a&gt;ならインストールして&lt;code&gt;-f lcov&lt;/code&gt;と指定すればいいだけです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -D textlint textlint-formatter-lcov
$(npm bin)/textlint -f lcov README.md
# lcov形式で結果が出力される
$(npm bin)/textlint -f lcov README.md -o lcov.info
# ファイルとして保存する
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot; title=&quot;Codecov&quot;&gt;Codecov&lt;/a&gt;へカバレッジを送りたい場合&lt;code&gt;textlint-formatter-codecov&lt;/code&gt;を使って&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -D textlint textlint-formatter-codecov codecov.io
$(npm bin)/textlint -f codecov README.md | codecov
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とするだけです。&lt;/p&gt;

&lt;p&gt;CodecovはPull Request毎にカバレッジを書いてくれるBotとかもあるので面白いです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2016/01/12-1452597521.png&quot; alt=&quot;codecov bot&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture/pull/91&quot; title=&quot;feat(coverage): add coverage for text by azu · Pull Request #91 · azu/JavaScript-Plugin-Architecture&quot;&gt;feat(coverage): add coverage for text by azu · Pull Request #91 · azu/JavaScript-Plugin-Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;おわり&quot;&gt;おわり&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;を使って文章カバレッジ?を取る方法について書きました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-formatter-codecov&quot;&gt;azu/textlint-formatter-codecov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-formatter-lcov&quot;&gt;azu/textlint-formatter-lcov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/lcov-summary&quot; title=&quot;azu/lcov-summary&quot;&gt;azu/lcov-summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最初は&lt;a href=&quot;https://github.com/azu/textstat&quot; title=&quot;textstat&quot;&gt;textstat&lt;/a&gt;を使ってメトリクスを継続的に取る方法を探していましたが、途中でコードカバレッジの仕組みをLinterにも持ってくれば面白いのではないかと気づきました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;コードカバレッジを常に100%としてるプロジェクトって普通はないから、理想的な状態を表現したルールを100%として、コードカバレッジの%が理想に対する現実の%として表現できそうな感じ。&amp;#10;&amp;#10;Lintのルールは厳しくすると書くのが辛いから、理想と現実のルールは上手く分離できそう&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/684300797102800896&quot;&gt;January 5, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;この仕組みは&lt;a href=&quot;http://eslint.org/&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt;とか他のLintでもlcov形式で出力すればできるので、Lintカバレッジレポートみたいなものなのかもしれません。&lt;/p&gt;

&lt;p&gt;Travis CIとかと連携してコミットに紐付いて特定の値を貯めることが出来るウェブサービスがあったらまた別の方法がとれるかもしれません。&lt;/p&gt;

&lt;p&gt;Google Analyticsとかで実現できそうですがあんまり使いやすくないです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://t32k.me/mol/log/gaer/&quot; title=&quot;コマンドラインからGoogle Analyticsにデータを記録するGAERをつくった - MOL&quot;&gt;コマンドラインからGoogle Analyticsにデータを記録するGAERをつくった - MOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mattdesl/npm-install-analytics&quot; title=&quot;mattdesl/npm-install-analytics&quot;&gt;mattdesl/npm-install-analytics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://azu.gitbooks.io/nodefest-technical-writing/content/&quot; title=&quot;Introduction | 技術文書をソフトウェア開発する話&quot;&gt;技術文書をソフトウェア開発する話&lt;/a&gt;でも話していましたが、文章に対するプログラミング言語のようなツールはまだまだ少ない印象です。
(研究から出てるツールはあるけど、特定のユースケースをはみ出ると使えなくなる印象)&lt;/p&gt;

&lt;p&gt;文書もCIを回して開発するのがもっとあたりまえになってくると、もっと面白いことが色々起きるのではないかと思っています。&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Jan 2016 09:44:00 +0900</pubDate>
        <link>http://efcl.info/2016/01/12/textlint-coverage/</link>
        <guid isPermaLink="true">http://efcl.info/2016/01/12/textlint-coverage/</guid>
        
        <category>textlint</category>
        
        <category>coverage</category>
        
        <category>JavaScript</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>今年のOSS活動振り返り @ 2015</title>
        <description>&lt;p&gt;2015年のOSS活動の振り返り&lt;/p&gt;

&lt;p&gt;去年のこちら =&amp;gt; &lt;a href=&quot;http://efcl.info/2014/12/31/oss-in-2014/&quot; title=&quot;今年のOSS活動振り返り @ 2014 | Web Scratch&quot;&gt;今年のOSS活動振り返り @ 2014 | Web Scratch&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu&quot;&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2015/12/30-1451483221.png&quot; alt=&quot;github contributes&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contributions in the last yearが6490 =&amp;gt; 9322になってるけど、全体では自分のトークンを使ったCIからの自動デプロイが1/3ぐらい占めてそうなので水増し感がある&lt;/p&gt;

&lt;p&gt;9月ぐらいまでだいたい7000前後で安定してて、その辺りで&lt;a href=&quot;http://realtime.jser.info/&quot; title=&quot;Realtime JSer.info&quot;&gt;Realtime JSer.info&lt;/a&gt;追加したのと&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;の開発を再開したり&lt;a href=&quot;https://www.gitbook.com/book/azu/javascript-plugin-architecture/details&quot; title=&quot;JavaScript Plugin Architecture&quot;&gt;JavaScript Plugin Architecture&lt;/a&gt;という本書いてたのが増えてる原因。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Current streak 666だ。&amp;#10;Contributionsはゾロ目にはならなかった。 &lt;a href=&quot;http://t.co/i7ohh0hKqg&quot;&gt;pic.twitter.com/i7ohh0hKqg&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/638740485498998784&quot;&gt;September 1, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Current streakの方を見ると2年ぐらい毎日コミットを継続してる。
コミットするのは習慣なので特に意識はしてない。
原因としては&lt;a href=&quot;http://efcl.info/2014/12/31/oss-in-2014/&quot;&gt;去年も書いた&lt;/a&gt;けど&lt;a href=&quot;https://github.com/jser/jser.info&quot; title=&quot;jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;とかのブログ周りが入ってるのと、移動中とか空いてる時間にコミットしているのが影響してる。
逆に移動中もコミット出来るように、あらかじめIssueで設計とかをしてすぐ作業できるものをキューに積んでいる感じ。&lt;/p&gt;

&lt;p&gt;最近GTD本読んでて同じようなことが書いてあった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;そのときやることに関して最初に考えなければならないのは、その場所で、そこにあるものを使ってできるのは何かということだ。
...
「@電話」「@家」「@パソコン」「@買い物・用事」...といった具合だ。行動を選択する際に、こうして&amp;quot;状況&amp;quot;で分類されたリストがあれば便利だ。
...
一つのToDoリストにさまざまな状況の行動がごちゃまぜになっていると、いちいち全部をチェックしなおさなければならないからだ。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.co.jp/dp/4576082116/&quot; title=&quot;はじめてのGTD ストレスフリーの整理術&quot;&gt;はじめてのGTD ストレスフリーの整理術&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自分の場合は移動中にやることはIssueを立てて&lt;a href=&quot;https://github.com/issues/assigned&quot;&gt;自分をassign&lt;/a&gt;しておき、移動中はIssueを処理することに集中している。
インストールが重いやつとか調べ物はネットワーク的に辛いので、事前に調べた事を書いておきオフラインに近い状況で出来るように準備してる。&lt;/p&gt;

&lt;h2 id=&quot;issue/pull-reuqst&quot;&gt;Issue/Pull Reuqst&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=author%3Aazu+created%3A2015-01-01..2016-01-01+is%3Aissue&amp;amp;type=Issues&amp;amp;ref=searchresults&quot;&gt;立てたIssue&lt;/a&gt;: 299&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/search?q=author%3Aazu+created%3A2015-01-01..2016-01-01++is%3Aissue&amp;amp;ref=searchresults&amp;amp;state=closed&amp;amp;type=Issues&amp;amp;utf8=%E2%9C%93&quot;&gt;閉じたIssue&lt;/a&gt;: 231&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=author%3Aazu+created%3A2015-01-01..2016-01-01+is%3Apr&amp;amp;type=Issues&amp;amp;ref=searchresults&quot;&gt;出したPull Requst&lt;/a&gt;: 367&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/search?q=author%3Aazu+created%3A2015-01-01..2016-01-01+is%3Apr+&amp;amp;state=closed&amp;amp;type=Issues&amp;amp;utf8=%E2%9C%93&quot;&gt;閉じたPull Request&lt;/a&gt;: 355&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;作ったもの&quot;&gt;&lt;a href=&quot;https://github.com/search?o=asc&amp;amp;q=user%3Aazu+created%3A2015-01-01..2016-01-01&amp;amp;ref=searchresults&amp;amp;s=updated&amp;amp;type=Repositories&amp;amp;utf8=%E2%9C%93&quot;&gt;作ったもの&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;記憶にあるものを抜粋&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/node-cocproxy&quot; title=&quot;azu/node-cocproxy&quot;&gt;azu/node-cocproxy&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Node.js版&lt;a href=&quot;http://coderepos.org/share/wiki/CocProxy&quot; title=&quot;CocProxy&quot;&gt;CocProxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/wait-for-element.js&quot; title=&quot;azu/wait-for-element.js&quot;&gt;azu/wait-for-element.js&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/04/06/wait-for-element/&quot; title=&quot;ある要素が表示されるまで待つJSライブラリを書いた(MutationObserver)&quot;&gt;ある要素が表示されるまで待つJSライブラリを書いた(MutationObserver)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/mini-flux&quot;&gt;azu/mini-flux&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/react-meetup/flux.html&quot;&gt;10分で実装するFlux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/pdf-markdown-annotator&quot; title=&quot;azu/pdf-markdown-annotator&quot;&gt;azu/pdf-markdown-annotator&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/05/04/pdf-annotation-markdown/&quot; title=&quot;PDFを見ながらMarkdownでメモを取れるアプリを書いた | Web Scratch&quot;&gt;PDFを見ながらMarkdownでメモを取れるアプリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/azu/issues/47&quot; title=&quot;ECMAScript仕様書を読む&quot;&gt;ECMAScript仕様書を読む&lt;/a&gt;ために作成した&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/annotation-memo/es6/&quot;&gt;ECMAScript 6 読書メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/annotation-memo/es6-draft/&quot;&gt;ECMAScript 6 draft 読書メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/annotation-memo/es5/&quot;&gt;ECMAScript 5 読書メモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/github-issue-teev&quot; title=&quot;azu/github-issue-teev&quot;&gt;azu/github-issue-teev&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/07/30/github-issue-manager/&quot; title=&quot;自分に関係するGitHub Issueを一覧できるアプリを書いた | Web Scratch&quot;&gt;自分に関係するGitHub Issueを一覧できるアプリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自分をassignしたIssueを確認するために作った&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.producteev.com/&quot; title=&quot;Producteev&quot;&gt;Producteev&lt;/a&gt;と&lt;a href=&quot;https://tacoapp.com/&quot; title=&quot;Taco&quot;&gt;Taco&lt;/a&gt;をインスパイアした&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/browser-runner&quot; title=&quot;azu/browser-runner&quot;&gt;azu/browser-runner&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/07/23/browser-runner/&quot; title=&quot;コマンドラインまたはNodeモジュールからブラウザでURLへ簡単にアクセスさせる | Web Scratch&quot;&gt;コマンドラインまたはNodeモジュールからブラウザでURLへ簡単にアクセスさせる | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Seleniumで遊んでた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/video-transcript-note&quot; title=&quot;azu/video-transcript-note&quot;&gt;azu/video-transcript-note&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/07/27/video-transcript-note/&quot; title=&quot;動画とルビ翻訳された字幕をみながらMarkdownメモできるアプリを書いた | Web Scratch&quot;&gt;動画とルビ翻訳された字幕をみながらMarkdownメモできるアプリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/video-transcript-tracker&quot;&gt;azu/video-transcript-tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/video-transcript-note&quot;&gt;azu/video-transcript-note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/video-shortcut-controller&quot;&gt;azu/video-shortcut-controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/video-prefetcher&quot;&gt;azu/video-prefetcher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/tc39-svg/&quot; title=&quot;TC39 Process&quot;&gt;TC39 Process&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;TC39プロセスの図解&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/power-doctest&quot; title=&quot;azu/power-doctest&quot;&gt;azu/power-doctest&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/08/10/power-doctest1.0/&quot; title=&quot;power-assertを使ったDoctestツール power-doctestを書き直した | Web Scratch&quot;&gt;power-assertを使ったDoctestツール power-doctestを書き直した | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/ast-equal&quot;&gt;azu/ast-equal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/tagged-template-to-ast&quot;&gt;azu/tagged-template-to-ast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/comment-to-assert&quot;&gt;azu/comment-to-assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/ast-source&quot;&gt;azu/ast-source&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ast-sourceは未完成な感じなので書き直す&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/reftest-runner&quot;&gt;azu/reftest-runner&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/05/14/reftest-runner/&quot;&gt;ブラウザでビジュアルテストをするreftest-runnerを作った | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ブラウザの描画結果を比較するテストツールを書いた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/ooooooo_q/nds-8-reftest&quot;&gt;nds_8_reftest.pdf // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/npm-relative-install&quot; title=&quot;azu/npm-relative-install&quot;&gt;azu/npm-relative-install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/npm-relative-version&quot; title=&quot;azu/npm-relative-version&quot;&gt;azu/npm-relative-version&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;現在のpatchバージョン前のモジュールをインストールするツール&lt;/li&gt;
&lt;li&gt;reftestで前回のバージョンからの描画差異がないかを自動的にやるために書いた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/assistant-bucho/test-everything.html&quot; title=&quot;ロジック、E2E、描画、音、動画、Example、文章 - 色々なJSテスト&quot;&gt;ロジック、E2E、描画、音、動画、Example、文章 - 色々なJSテスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/stemming-x-keywords&quot; title=&quot;azu/stemming-x-keywords&quot;&gt;azu/stemming-x-keywords&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;文章からキーワードを取り出すやつ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide-what-is-ecmascript/&quot;&gt;Introduction | ECMAScriptとは何か？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/10/18/ecmascript-paper/&quot;&gt;ECMAScriptの仕様策定に関するカンニングペーパー | Web Scratch&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nextwebconf.connpass.com/event/19699/&quot; title=&quot;次世代 Web カンファレンス&quot;&gt;次世代 Web カンファレンス&lt;/a&gt;の予習用に作ったやつ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/read-all-later&quot; title=&quot;azu/read-all-later&quot;&gt;azu/read-all-later&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;PocketにURLをまとめて追加するアプリ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/11/30/read-all-later/&quot; title=&quot;WeeklyメルマガのURLを貼ったら中のリンクを全部Pocketに突っ込むアプリ | Web Scratch&quot;&gt;WeeklyメルマガのURLを貼ったら中のリンクを全部Pocketに突っ込むアプリ | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/pdf.js-controller&quot; title=&quot;azu/pdf.js-controller&quot;&gt;azu/pdf.js-controller&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/12/07/pdf.js-controller/&quot; title=&quot;[pdf.js] テキスト選択出来るスライド表示ライブラリを書いた | Web Scratch&quot;&gt;[pdf.js] テキスト選択出来るスライド表示ライブラリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PDFをスライド表示するライブラリ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.decksetapp.com/&quot; title=&quot;Deckset&quot;&gt;Deckset&lt;/a&gt;で作った自分の発表資料を公開するときに作ったのが元&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource&quot;&gt;azu/browser-javascript-resource&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ブラウザ公式の情報はどこを見ればいいのかをまとめたもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/idempotent-bind&quot; title=&quot;azu/idempotent-bind&quot;&gt;azu/idempotent-bind&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;毎回同じものを返す&lt;code&gt;bind&lt;/code&gt;のライブラリ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/06/05/this-component/&quot; title=&quot;React/dekuコンポーネントとthisのパターン | Web Scratch&quot;&gt;React/dekuコンポーネントとthisのパターン | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/tweet-truncator&quot; title=&quot;azu/tweet-truncator&quot;&gt;azu/tweet-truncator&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Twitterへ投稿するメッセージを140文字以内に省略するライブラリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/github-ribbon-generator/&quot; title=&quot;GitHub Ribbon Generator&quot;&gt;GitHub Ribbon Generator&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/12/25/github-ribbon-generator/&quot; title=&quot;GitHub Ribbon GeneratorをVue.jsで書いた | Web Scratch&quot;&gt;GitHub Ribbon GeneratorをVue.jsで書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/material-flux-container&quot; title=&quot;azu/material-flux-container&quot;&gt;azu/material-flux-container&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/material-flux&quot; title=&quot;material-flux&quot;&gt;material-flux&lt;/a&gt;のcontainer実装&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/electron-authentication-hatena&quot; title=&quot;azu/electron-authentication-hatena&quot;&gt;azu/electron-authentication-hatena&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ElectronではてなのOAuth認証をするライブラリ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hatena/Hatena-Bookmark-iOS-SDK/issues/40&quot; title=&quot;複数クライアントで発生する認証の問題 · Issue #40 · hatena/Hatena-Bookmark-iOS-SDK&quot;&gt;複数クライアントで発生する認証の問題 · Issue #40 · hatena/Hatena-Bookmark-iOS-SDK&lt;/a&gt;がつらすぎる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/postem&quot; title=&quot;azu/postem&quot;&gt;azu/postem&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tombfix&quot; title=&quot;Tombfix&quot;&gt;Tombfix&lt;/a&gt;のようなクロスポストクライアント&lt;/li&gt;
&lt;li&gt;Electronで作っていてOAuth認証とかをやってる&lt;/li&gt;
&lt;li&gt;拡張する仕組みはあるけど、アプリで配布すると拡張が難しい問題にはまってる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npmに上げたモジュールは122個となった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/%7Eazu&quot;&gt;https://www.npmjs.com/~azu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;文書開発について&quot;&gt;文書開発について&lt;/h2&gt;

&lt;p&gt;今年の後半は&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;を始めとした文書関連のものを色々やったので別途項目を設ける。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2014/12/31/oss-in-2014/&quot;&gt;去年&lt;/a&gt;は&lt;a href=&quot;http://azu.github.io/promises-book/&quot; title=&quot;JavaScript Promiseの本&quot;&gt;JavaScript Promiseの本&lt;/a&gt;を書いていたけど、今年は書くためのツールや手法を考えるのを目的にした&lt;/p&gt;

&lt;p&gt;今年やってたことの大元は以下のIssueから始まってる形&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;コンセプト: もっと気軽に書ける電子書籍
-- &lt;a href=&quot;https://github.com/azu/azu/issues/42#issuecomment-155667921&quot; title=&quot;[Markdown] 電子書籍開発環境 · Issue #42 · azu/azu&quot;&gt;[Markdown] 電子書籍開発環境 · Issue #42 · azu/azu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/28/easy-to-create-ebook/&quot; title=&quot;今すぐ電子書籍(技術書)を書き始める方法と文章の自動チェック | Web Scratch&quot;&gt;今すぐ電子書籍(技術書)を書き始める方法と文章の自動チェック | Web Scratch&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/27/niku_sushi/&quot; title=&quot;#niku_sushi&quot;&gt;#niku_sushi&lt;/a&gt;で発表した&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://azu.gitbooks.io/nodefest-technical-writing/content/&quot; title=&quot;Introduction | 技術文書をソフトウェア開発する話&quot;&gt;Introduction | 技術文書をソフトウェア開発する話&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/11/07/nodefest-2015/&quot; title=&quot;東京Node学園祭2015&quot;&gt;東京Node学園祭2015&lt;/a&gt;で発表した&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/gitbook-starter-kit&quot; title=&quot;azu/gitbook-starter-kit&quot;&gt;azu/gitbook-starter-kit&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;GitBookで電子書籍を書くスターターキットを作った&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture&quot; title=&quot;azu/JavaScript-Plugin-Architecture&quot;&gt;azu/JavaScript-Plugin-Architecture&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;文書開発するためにJavaScriptのプラグインアーキテクチャについての本を書いてた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;とかのツールを書いても定量的に確かめられる文章がないと困るので一緒に書いてた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;textlint&quot;&gt;textlint&lt;/h3&gt;

&lt;p&gt;textlint自体は去年の今頃作った。&lt;/p&gt;

&lt;p&gt;だけど、この時は&lt;a href=&quot;https://github.com/azu/textlint-rule-spellcheck-tech-word&quot; title=&quot;textlint-rule-spellcheck-tech-word&quot;&gt;textlint-rule-spellcheck-tech-word&lt;/a&gt;だけのためにtextlintという汎用的な仕組みを作っただけでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2014/12/30/textlint/&quot; title=&quot;JavaScriptでルールを書けるテキスト/Markdownの校正ツール textlint を作った | Web Scratch&quot;&gt;JavaScriptでルールを書けるテキスト/Markdownの校正ツール textlint を作った | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/01/15/reactsushi/&quot;&gt;#reactsushi でESLintとtextlintの設計について話してきた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今年の9月ぐらいから電子書籍開発環境についてちゃんと手を動かそうと思って開発が再開した。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;今ひたすらこれやってる  &amp;quot;[Markdown] 電子書籍開発環境 · Issue #‌42 · azu/azu&amp;quot;  &lt;a href=&quot;https://t.co/Pze9xH2x4g&quot;&gt;https://t.co/Pze9xH2x4g&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/637230368148426752&quot;&gt;August 28, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;文章を書こうと思ったら自分ですぐ書けるようなチェックツールが絶対必要になる(かつそれが独自のものだと再利用できないしだるい)ので、
&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;をちゃんと使えるものにした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/10/introduce-textlint/&quot;&gt;textlintで日本語の文章をチェックする | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/14/textlint-rule-prh/&quot;&gt;textlint + prhで表記ゆれを検出する | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/10/19/textlint-plugin-JTF-style/&quot;&gt;JTF日本語標準スタイルガイドのルールセットで文章をチェックできるtextlintプリセット | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/11/20/textlint5.0.0/&quot;&gt;textlint 5.0.0で非同期処理に対応、kuromoji.jsで校正、テキストの統計処理 | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/12/30/textlint-preset/&quot;&gt;ルールプリセットを使ってお手軽にtextlint入門 | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これに関連して&lt;a href=&quot;https://github.com/azu/textlint-rule-no-doubled-joshi&quot;&gt;色々&lt;/a&gt;&lt;a href=&quot;https://github.com/azu/textlint-rule-no-double-negative-ja&quot;&gt;論文&lt;/a&gt;や&lt;a href=&quot;http://redpen.cc/&quot; title=&quot;RedPen&quot;&gt;RedPen&lt;/a&gt;の実装などを参考にtextlintルールを書いてた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2015/12/31-1451491109.png&quot; alt=&quot;textlint module&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/textlint/textlint/wiki/Collection-of-textlint-rule&quot; title=&quot;Collection of textlint rule · textlint/textlint Wiki&quot;&gt;Collection of textlint rule · textlint/textlint Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;textlint側も拡張に必要なものは大体実装して、ある程度日本語関係のルールも出てきたので、
これから使ってみたい人は以下の記事あたりを見ると良さそう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/12/30/textlint-preset/&quot;&gt;ルールプリセットを使ってお手軽にtextlint入門 | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/10/introduce-textlint/&quot;&gt;textlintで日本語の文章をチェックする | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;その他のコミット&quot;&gt;その他のコミット&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ECMAScriptのISO標準関連(ISO/IEC 16262)

&lt;ul&gt;
&lt;li&gt;SC 22/ECMAScript Ad Hoc委員会への参加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes&quot; title=&quot;rwaldron/tc39-notes&quot;&gt;rwaldron/tc39-notes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;TC39のミーティングノートに&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/commits?author=azu&quot;&gt;毎回&lt;/a&gt;修正投げてる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+author%3Aazu+is%3Aclosed+created%3A%222015-01-01+..+2016-01-01%22+fix+OR+Markdown+OR+README&quot;&gt;いろんなところでドキュメントの修正&lt;/a&gt;をPull Request

&lt;ul&gt;
&lt;li&gt;機能追加とかのPRとかよりはドキュメントの修正を送ることが多い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/takuyaa/kuromoji.js/pulls?q=is%3Apr+author%3Aazu+is%3Aclosed&quot;&gt;kuromoji.js&lt;/a&gt;に何個か修正送った

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/kuromojin&quot; title=&quot;kuromojin&quot;&gt;kuromojin&lt;/a&gt;を作ったりもした&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;来年&quot;&gt;来年&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/promises-book/&quot; title=&quot;JavaScript Promiseの本&quot;&gt;JavaScript Promiseの本&lt;/a&gt;のVer 2.0がでるといいな

&lt;ul&gt;
&lt;li&gt;async/awaitとjQuery待ち&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/&quot; title=&quot;JSer.info&quot;&gt;JSer.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;来月で&lt;a href=&quot;http://jser.info/2015/12/14/jser-info-announce-5-years/&quot; title=&quot;JSer.info 5周年記念イベントを1/16(土)に開催します - JSer.info&quot;&gt;JSer.info 5周年記念&lt;/a&gt;になる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;自動化、コストを小さくする

&lt;ul&gt;
&lt;li&gt;気合で解消してる場所をシステムとして解消していきたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テストへコミットする

&lt;ul&gt;
&lt;li&gt;テストフレームワークの変化はゆっくりである&lt;/li&gt;
&lt;li&gt;けど、&lt;a href=&quot;https://github.com/mochajs/mocha/issues/1969&quot;&gt;最近&lt;/a&gt;、&lt;a href=&quot;https://github.com/sindresorhus/ava&quot;&gt;ちょっと&lt;/a&gt;変化の&lt;a href=&quot;https://github.com/js-reporters/js-reporters&quot;&gt;タイミング&lt;/a&gt;がありそうなのでちゃんと考える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;作って継続的に動くサイト?を作る

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sisidovski.hatenablog.com/entry/2015/12/04/120633&quot; title=&quot;Progressive Web Apps&quot;&gt;Progressive Web Apps&lt;/a&gt;的なものとかはそれを目的に何か作るよりも、既にあるものへそれを取り組む姿勢が必要そう&lt;/li&gt;
&lt;li&gt;そういう遊び場となるサイトがないので欲しい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JavaScript/ECMAScriptを改めてどう学べばいいのか考える

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/how-to-learn-es6&quot; title=&quot;azu/how-to-learn-es6&quot;&gt;azu/how-to-learn-es6&lt;/a&gt;とか&lt;a href=&quot;https://twitter.com/hashtag/thinking_in_es6?src=hash&quot; title=&quot;#thinking_in_es6&quot;&gt;#thinking_in_es6&lt;/a&gt;で考えてるやつ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 31 Dec 2015 01:44:00 +0900</pubDate>
        <link>http://efcl.info/2015/12/31/oss-in-2015/</link>
        <guid isPermaLink="true">http://efcl.info/2015/12/31/oss-in-2015/</guid>
        
        <category>JavaScript</category>
        
        <category>OSS</category>
        
        
        <category>雑記</category>
        
      </item>
    
      <item>
        <title>ルールプリセットを使ってお手軽にtextlint入門</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt;はルールで拡張出来る自然言語向けのLintツールです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/textlint/textlint&quot; title=&quot;textlint&quot;&gt;textlint&lt;/a&gt; &lt;a href=&quot;https://github.com/textlint/textlint/releases/tag/5.1.0&quot; title=&quot;5.1.0&quot;&gt;5.1.0&lt;/a&gt;でルールのプリセットをサポートしました。&lt;/p&gt;

&lt;p&gt;ルール、プリセット、プラグインは以下のような関係です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/textlint/textlint/tree/master/docs/docs/rule.md&quot;&gt;rule&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;いわゆるルール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/textlint/textlint/tree/master/docs/docs/rule-preset.md&quot;&gt;rule-preset&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ルールをまとめたもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/textlint/textlint/tree/master/docs/docs/plugin.md&quot;&gt;plugin&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ルールとプロセッサ(拡張機能)を持ってる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/textlint/textlint/master/docs/resources/rule-preset-plugin.png&quot; alt=&quot;rule-preset-plugin&quot;&gt;&lt;/p&gt;

&lt;p&gt;textlintはデフォルトでは一つもルールを持っていません。&lt;/p&gt;

&lt;p&gt;そのため、どのルールを入れたらいいか迷った場合に、誰かがまとめてくれたプリセットをとりあえず入れれば、とりあえず文章のチェックが出来るようになります。&lt;/p&gt;

&lt;p&gt;textlintの使い方は以下で解説しているのと基本的に同じですが、今回はプリセットの使い方を紹介します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/10/introduce-textlint/&quot; title=&quot;textlintで日本語の文章をチェックする | Web Scratch&quot;&gt;textlintで日本語の文章をチェックする | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;

&lt;p&gt;textlint本体と2つのプリセットをインストールしてみます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-rule-preset-japanese&quot;&gt;azu/textlint-rule-preset-japanese&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;自分が作った日本語関係のルールセット&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-rule-preset-JTF-style&quot;&gt;azu/textlint-rule-preset-JTF-style&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jtf.jp/jp/style_guide/styleguide_top.html&quot;&gt;JTFスタイルガイド&lt;/a&gt;のルールセット&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/10/19/textlint-plugin-JTF-style/&quot; title=&quot;JTF日本語標準スタイルガイドのルールセットで文章をチェックできるtextlintプリセット | Web Scratch&quot;&gt;JTF日本語標準スタイルガイドのルールセットで文章をチェックできるtextlintプリセット | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;npm i -D textlint textlint-rule-preset-japanese textlint-rule-preset-jtf-style
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;p&gt;プリセットをコマンドラインから指定することで設定ファイルなしに利用することもできます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;npm bin&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/textlint --preset preset-japanese --preset preset-jtf-style README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;逆にこの場合はルール毎の設定ができないので、設定ファイルである&lt;code&gt;.textlintrc&lt;/code&gt;を使ってみます。&lt;/p&gt;

&lt;h3 id=&quot;設定ファイル&quot;&gt;設定ファイル&lt;/h3&gt;

&lt;p&gt;サンプルリポジトリを以下に置いておきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/textlint-preset-example&quot; title=&quot;azu/textlint-preset-example&quot;&gt;azu/textlint-preset-example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;.textlintrc&lt;/code&gt;に以下のように書くとプリセットを有効化できます&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;rules&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;preset-japanese&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;preset-jtf-style&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;プリセットはルールの集合なので、プリセットの中にある特定のルールを設定したい場合があります。&lt;/p&gt;

&lt;p&gt;例えば、&lt;a href=&quot;https://github.com/azu/textlint-rule-preset-JTF-style&quot; title=&quot;textlint-rule-preset-JTF-style&quot;&gt;textlint-rule-preset-JTF-style&lt;/a&gt;の&lt;code&gt;&amp;quot;1.2.2.ピリオド(.)とカンマ(,)&amp;quot;&lt;/code&gt;だけを無効化したいなら次のように書くことができます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;rules&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;preset-jtf-style&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.2.ピリオド(.)とカンマ(,)&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同じディレクトリに&lt;code&gt;.textlinrc&lt;/code&gt;があれば、実行は&lt;code&gt;textlint&lt;/code&gt;コマンドを叩くだけです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$(npm bin)/textlint README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/tndweS7k0ZsrVz8yN3olPvD3l2rbTx.png&quot; alt=&quot;result&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;もっとルールを加える&quot;&gt;もっとルールを加える&lt;/h3&gt;

&lt;p&gt;プリセットとルールは併用可能なので、プリセットにないルールは自分で追加していくといいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/textlint-rule-prh&quot; title=&quot;textlint-rule-prh&quot;&gt;textlint-rule-prh&lt;/a&gt;を使った表記揺れの検出などは効果的なルールと言えます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/09/14/textlint-rule-prh/&quot; title=&quot;textlint + prhで表記ゆれを検出する | Web Scratch&quot;&gt;textlint + prhで表記ゆれを検出する | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;もっと優しい使い方&quot;&gt;もっと優しい使い方&lt;/h3&gt;

&lt;p&gt;Node.jsやGitなどに慣れてない人は以下を参考にしてください。
(プリセットではなくルールベースですが、プリセットとルールの使い方はだいたい同じです)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kubosho/textlint-starter-kit&quot;&gt;kubosho/textlint-starter-kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/KenshoFujisaki/TextlintAtom&quot;&gt;KenshoFujisaki/TextlintAtom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://gyazo.com/430f92606e5f5bdb06e0583001a9a2b0.gif&quot; alt=&quot;preview&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;プリセットの作り方&quot;&gt;プリセットの作り方&lt;/h2&gt;

&lt;p&gt;プリセットの作り方は以下のドキュメントを参考にしてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/textlint/textlint/blob/master/docs/rule-preset.md&quot; title=&quot;textlint/rule-preset.md at master · textlint/textlint&quot;&gt;textlint/rule-preset.md at master · textlint/textlint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的にルール本体を&lt;code&gt;rules&lt;/code&gt;に、ルールのデフォルト設定を&lt;code&gt;rulesConfig&lt;/code&gt;に書いたオブジェクトを返すだけなので単純です。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;module.exports = {
    &amp;quot;rules&amp;quot;: {
        &amp;quot;no-todo&amp;quot;: require(&amp;quot;textlint-rule-no-todo&amp;quot;)
    },
    &amp;quot;rulesConfig&amp;quot;: {
        &amp;quot;no-todo&amp;quot;: true
    }
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作ったプリセットは&lt;code&gt;textlint-rule-preset-&amp;lt;好きな名前&amp;gt;&lt;/code&gt;で公開してください。
(この命名規則だとtextlint-rule部分の指定を省略できます)&lt;/p&gt;

&lt;p&gt;プリセットは元々別にあるルールを集めただけの場合が多くなると思うので、依存するルールが更新された時にプリセットも更新できると便利です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://greenkeeper.io/&quot; title=&quot;Greenkeeper&quot;&gt;Greenkeeper&lt;/a&gt;と&lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot; title=&quot;semantic-release&quot;&gt;semantic-release&lt;/a&gt;を使うと依存するルールモジュールが更新されたら自動でPull Requestがきて、マージしたら自動的にnpm publishすることができて便利です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/itkrt2y/items/c0e77a4e3cda173917bb&quot; title=&quot;JavaScript - 自動でnpmライブラリをアプデ&amp;amp;amp;プルリクしてくれるサービスのgreenkeeperがすごく便利だった - Qiita&quot;&gt;JavaScript - 自動でnpmライブラリをアプデ&amp;amp;プルリクしてくれるサービスのgreenkeeperがすごく便利だった - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/niku_sushi/npm-semantic-release.html&quot; title=&quot;npmで成果物をsemantic-release :rocket:&quot;&gt;npmで成果物をsemantic-release :rocket:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 30 Dec 2015 16:01:00 +0900</pubDate>
        <link>http://efcl.info/2015/12/30/textlint-preset/</link>
        <guid isPermaLink="true">http://efcl.info/2015/12/30/textlint-preset/</guid>
        
        <category>textlint</category>
        
        <category>ReleaseNote</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>GitHub Ribbon GeneratorをVue.jsで書いた</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://qiita.com/advent-calendar/2015/vue&quot; title=&quot;Vue.js Advent Calendar 2015 - Qiita&quot;&gt;Vue.js Advent Calendar 2015 - Qiita&lt;/a&gt; 25日目&lt;/p&gt;

&lt;h2 id=&quot;github-ribbon-generator&quot;&gt;GitHub Ribbon Generator&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/github-ribbon-generator/&quot; title=&quot;GitHub Ribbon Generator&quot;&gt;GitHub Ribbon Generator&lt;/a&gt;というツールを作りました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/github-ribbon-generator/&quot;&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2015/12/25-1451045310.png&quot; alt=&quot;github ribbon&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/blog/273-github-ribbons&quot; title=&quot;GitHub Ribbons&quot;&gt;GitHub Ribbons&lt;/a&gt;というのは、右上にあるFork Meボタンのことです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/blog/273-github-ribbons&quot; title=&quot;GitHub Ribbons&quot;&gt;GitHub Ribbons&lt;/a&gt; 公式の解説&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Repository&lt;/li&gt;
&lt;li&gt;Position(右か左)&lt;/li&gt;
&lt;li&gt;Color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を入力してあげれば、そのままコピペ出来るGitHub RibbonのHTMLが出来上がるので後はコピペするだけです。&lt;/p&gt;

&lt;h2 id=&quot;仕組み&quot;&gt;仕組み&lt;/h2&gt;

&lt;p&gt;このツール自体はコピペしてURLを書き換えとか毎回やるの面倒だなと思って作った程度ですが、
もう一つの目的としては&lt;a href=&quot;http://vuejs.org/2015/10/26/1.0.0-release/&quot; title=&quot;Vue.js 1.0.0&quot;&gt;Vue.js 1.0.0&lt;/a&gt;を使ってみたかったというのがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/github-ribbon-generator&quot; title=&quot;azu/github-ribbon-generator&quot;&gt;azu/github-ribbon-generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://jp.vuejs.org/guide/application.html&quot; title=&quot;大規模アプリケーションの構築 - vue.js&quot;&gt;大規模アプリケーションの構築 - vue.js&lt;/a&gt;にかかれていること大体実装した感じになっています。
Vue.jsというと2 wayのgetter/setterを使ったデータバインディング的な感じですが、アプリが大きくなると辛くなるというのはわかっていました。(フォームとかは簡単で便利ですが)&lt;/p&gt;

&lt;p&gt;なので、目的としては以下の2つになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React + Fluxみたいなデータの流れは実装ができるのか&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vue&lt;/code&gt;というフォーマット?での書き心地を確かめたい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大したことはやってないので&lt;a href=&quot;https://github.com/azu/github-ribbon-generator&quot; title=&quot;azu/github-ribbon-generator&quot;&gt;azu/github-ribbon-generator&lt;/a&gt;を直接見たほうが速いです。&lt;/p&gt;

&lt;h3 id=&quot;state&quot;&gt;state&lt;/h3&gt;

&lt;p&gt;このツールではstateは3つしか出てきません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Repository&lt;/li&gt;
&lt;li&gt;Position&lt;/li&gt;
&lt;li&gt;Color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを&lt;a href=&quot;https://github.com/azu/github-ribbon-generator/blob/master/src/store/UserStore.js&quot; title=&quot;UserStore&quot;&gt;UserStore&lt;/a&gt;という適当なものへ出し入れ出来るようにしています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ChangeEmitterは&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ChangeEmitter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./ChangeEmitter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserStore&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ChangeEmitter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;repositoryURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emitChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;.vue&quot;&gt;.vue&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.vue&lt;/code&gt; はVue.jsが公式に提供してるBrowseryとWebpackから扱えるフォーマットで、HTML/CSS/JSを一つにまとめたファイルです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vuejs.github.io/vue-loader/start/spec.html&quot;&gt;Vue Component Spec | Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vuejs/vue-loader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vueify&quot;&gt;vuejs/vueify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このツールのRoot Componentとなってる&lt;a href=&quot;https://github.com/azu/github-ribbon-generator/blob/master/src/component/app.vue&quot; title=&quot;app.vue&quot;&gt;app.vue&lt;/a&gt;を見てみると分かりやすいと思います。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.App&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.App&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.App&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.App&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;App&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;GitHub Ribbon Generator&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://ghbtns.com/github-btn.html?user=azu&amp;amp;repo=github-ribbon-generator&amp;amp;type=star&amp;amp;count=true&amp;amp;size=large&amp;quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scrolling=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;160px&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;30px&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Create Copy-Pastable GitHub Ribbon HTML snippet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;user-input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:repository-url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.repositoryURL&amp;quot;&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.color&amp;quot;&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;:position=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/user-input&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;copy-paste-box&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:repository-url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.repositoryURL&amp;quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.color&amp;quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;:position=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/copy-paste-box&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;git-hub-ribbon&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:repository-url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.repositoryURL&amp;quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.color&amp;quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;:position=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/git-hub-ribbon&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserInput&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./user-input.vue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GitHubRibbon&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./github-ribbon.vue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CopyPasteBox&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./copypaste-box.vue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../store/UserStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;App&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// App&amp;#39;s state&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;UserInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;GitHubRibbon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;CopyPasteBox&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// update State&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;updateState&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;created&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;destroyed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; に書いたものがそのまま&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;要素として追加されています。

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;style scoped&amp;gt;&lt;/code&gt; とすればカプセル化もできます。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; がそのコンポーネントなので、分かりやすく&lt;code&gt;&amp;lt;div class=&amp;quot;App&amp;quot;&amp;gt;&lt;/code&gt;で囲んでいます。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; はVueの&lt;a href=&quot;http://jp.vuejs.org/guide/components.html&quot; title=&quot;コンポーネント&quot;&gt;コンポーネント&lt;/a&gt;のコードです。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2015/12/2015-12-25_20-00-13.jpg&quot; alt=&quot;.vue style&quot;&gt;&lt;/p&gt;

&lt;p&gt;Reactだと&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;がない事以外は大体同じですが、&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;が同じ所に書けるのでコンポーネントのスタイルを簡単に適応するのがやりやすいです。&lt;/p&gt;

&lt;p&gt;Reactの場合も、コンポーネント毎にCSSファイルを作ってスタイルの設定をしていたので、同じ事がそのままできるのは分かりやすいです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;これはSUIT CSSという命名ルールと殆ど同じで、MyComponentというコンポーネントには.MyComponentというクラス名をつけるという命名ルールです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/08/24/flux-utils/&quot; title=&quot;はてなブックマーク検索を作りながらFlux Utilsについて学ぶ | Web Scratch&quot;&gt;はてなブックマーク検索を作りながらFlux Utilsについて学ぶ | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;逆に分かりにくい所としては、&lt;code&gt;.Vue&lt;/code&gt;でも&lt;code&gt;components&lt;/code&gt;に子コンポーネントの&lt;code&gt;.vue&lt;/code&gt;を読み込んだインスタンスを渡す事で、&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;の中でそのコンポーネントをタグとして書くことが出来ます。
(JSXでも大体同じ)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;UserInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;GitHubRibbon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;CopyPasteBox&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかし、&lt;code&gt;.vue&lt;/code&gt;では&lt;code&gt;components&lt;/code&gt;に渡した名前そのままではなく、ケバブケースにした名前で&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;に書く必要があります。&lt;/p&gt;

&lt;p&gt;例えば、&lt;code&gt;UserInput&lt;/code&gt;ならば&lt;code&gt;user-input&lt;/code&gt;というようになります。(keyで指定すればそのkeyで書くことが出来ます)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;user-input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:repository-url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.repositoryURL&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.color&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;:position=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/user-input&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;HTML の属性は大文字と小文字を区別しません。キャメルケースされた prop 名を属性として使用するとき、それらをケバブケース(kebab-case: ハイフンで句切られた)として使用する必要があります:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jp.vuejs.org/guide/components.html#%E3%82%AD%E3%83%A3%E3%83%A1%E3%83%AB%E3%82%B1%E3%83%BC%E3%82%B9_%E5%AF%BE_%E3%82%B1%E3%83%90%E3%83%96%E3%82%B1%E3%83%BC%E3%82%B9&quot; title=&quot;キャメルケース 対 ケバブケース&quot;&gt;キャメルケース 対 ケバブケース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このケバブケースで書かないといけないのが、警告もでなくてとても分かりにくい感じでした。
(Reactの&lt;code&gt;className&lt;/code&gt;とか、Riotの&lt;a href=&quot;http://riotjs.com/ja/api/#tag&quot; title=&quot;riot.tag&quot;&gt;riot.tag&lt;/a&gt;関数の制限とかも似た話ですが)&lt;/p&gt;

&lt;h3 id=&quot;コンポーネントとデータ&quot;&gt;コンポーネントとデータ&lt;/h3&gt;

&lt;p&gt;ReactのPropsと同じですが、Vue.jsも&lt;code&gt;props&lt;/code&gt;というの子コンポーネントで宣言してあげると、親コンポーネントから値を受け取れます。&lt;/p&gt;

&lt;p&gt;親(App.vue)からは&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;user-input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:repository-url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.repositoryURL&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.color&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;:position=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;state.position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/user-input&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と3つの値を渡したいで、子となる&lt;a href=&quot;https://github.com/azu/github-ribbon-generator/blob/master/src/component/user-input.vue&quot; title=&quot;user-input.vue&quot;&gt;user-input.vue&lt;/a&gt;では&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;props: {
    repositoryURL: String,
    position: String,
    color: String
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と宣言しています。&lt;/p&gt;

&lt;p&gt;受け取れるデータのタイプも書くことができ、&lt;a href=&quot;https://facebook.github.io/react/docs/reusable-components.html&quot; title=&quot;React.PropTypes&quot;&gt;React.PropTypes&lt;/a&gt;よりはシンプルなので分かりやすいです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Why is React&amp;#39;s PropTypes naming inconsistent with JS? number, object, string, array — all good — but then &amp;quot;func&amp;quot; and &amp;quot;bool&amp;quot;. Um...&lt;/p&gt;&amp;mdash; kangax (@kangax) &lt;a href=&quot;https://twitter.com/kangax/status/647110546194624512&quot;&gt;September 24, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.UserInput&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.UserInput-field&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UserInput&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;pure-form pure-form-aligned&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;fieldset&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UserInput-field pure-control-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;GitHub Repository:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;pure-input-2-3&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;repositoryURL&amp;quot;&lt;/span&gt;
                           &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://github.com/jquery/jquery&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UserInput-field pure-control-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Position:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;position&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;position&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;position in positionList&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;position.value&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UserInput-field pure-control-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Color:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;color in colorList&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;color.value&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../store/UserStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colorList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;positionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../util/ribbon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UserInput&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;repositoryURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// http://jp.vuejs.org/guide/forms.html#Select&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Create [{ text, value }]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;colorList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;positionList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;positionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;repositoryURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setRepositoryURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;ではその受け取った値を元に表示するHTMLを書くという感じです。&lt;/p&gt;

&lt;p&gt;Vue.jsでは&lt;code&gt;watch&lt;/code&gt;プロパティに書いたキー名で、Vueインスタンス[キー名] を監視する機能があるので、
これで値が変わったらStoreの値を書き換える&lt;code&gt;Store.set*&lt;/code&gt;を呼んでいます。
(&lt;a href=&quot;http://jp.vuejs.org/api/#vm-$watch(_expOrFn,_callback,_%5Boptions%5D_)&quot; title=&quot;vm.$watch&quot;&gt;vm.$watch&lt;/a&gt;の宣言的なバージョンですね)&lt;/p&gt;

&lt;p&gt;Storeに直接setter的なメソッドが生えてますが、この辺をAction的なものを経由するようにしたりすれば、大体Fluxと似たようなデータフローになると思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2015/12/25-1451042957.png&quot; alt=&quot;data-flow&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jp.vuejs.org/guide/application.html&quot; title=&quot;大規模アプリケーションの構築 - vue.js&quot;&gt;大規模アプリケーションの構築 - vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はFluxフレームワーク的なライブラリを使わずにEventEmitterのみで書いてます。&lt;/p&gt;

&lt;p&gt;公式でもFluxライクなフレームワークは作ってるらしいので、その辺を見てみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/tomato360/items/b2f11a392bf8fb125610&quot;&gt;Vue.js用のFluxライクなライブラリVuexを試してみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuejs/vuex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.mmmcorp.co.jp/blog/2015/12/03/vue-with-redux/&quot; title=&quot;Vue.jsにreduxを載せた話 | MMMブログ&quot;&gt;Vue.jsにreduxを載せた話 | MMMブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;React + Fluxみたいなデータの流れは実装ができるのか

&lt;ul&gt;
&lt;li&gt;=&amp;gt; まあ普通にできそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vue&lt;/code&gt;というフォーマット?での書き心地を確かめたい

&lt;ul&gt;
&lt;li&gt;=&amp;gt; HTML/CSS/JSがまとまった感じ&lt;/li&gt;
&lt;li&gt;JSXに比べるとCSSも一緒なのは分かりやすい&lt;/li&gt;
&lt;li&gt;テンプレートがちょこちょこ難しい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;データフローの話は公式でも&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuejs/vuex&lt;/a&gt;みたいので模索していそうです。&lt;/p&gt;

&lt;p&gt;Vue.jsで適当に書くとデータバインディングに頼って、どこで何が更新されているのか分からなくなるみたいな事が起きやすい印象です。
そのため、複雑になったものからデータフローをどう整理するかを色々考えてみると面白そうです。
(Reactでもいい気はしていますが)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.vue&lt;/code&gt;はCSSのカプセル化もあり結構いい感じですが、ただの独自フォーマットであるのでやり過ぎると後戻りできなくなる場合があるので気をつける必要がありそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Browserify、Webpackのプラグインとして実装されているので全てをコントロールできなくて破壊的な変更が起きる可能性&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vuejs.github.io/vue-loader/&quot; title=&quot;vue-loader&quot;&gt;vue-loader&lt;/a&gt;は特に何でも出来る感じなので、何でもやると危なそう&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、テンプレートの構文がちょこちょこ複雑(評価結果が見た目から直感的に分からない)な所があったりします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jp.vuejs.org/guide/components.html#%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB_%E5%AF%BE_%E5%8B%95%E7%9A%84&quot; title=&quot;リテラル 対 動的&quot;&gt;リテラル 対 動的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jp.vuejs.org/guide/syntax.html&quot; title=&quot;データバインディング構文 - vue.js&quot;&gt;データバインディング構文 - vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この辺は独自のテンプレート言語を持つ宿命という感じがするので慣れなのかもしれません。&lt;/p&gt;

&lt;p&gt;ただ、今回のツールだと大体何で書いても大した違いはない気がします。
以下の比較も読んでみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jp.vuejs.org/guide/comparison.html&quot; title=&quot;他のフレームワークとの比較 - vue.js&quot;&gt;他のフレームワークとの比較 - vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上、JavaScriptの素振りの話でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/azu/items/bacd146ed2e26980b9b0&quot; title=&quot;JavaScriptのトレンドを素振りして確認する方法 - Qiita&quot;&gt;JavaScriptのトレンドを素振りして確認する方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Dec 2015 19:39:00 +0900</pubDate>
        <link>http://efcl.info/2015/12/25/github-ribbon-generator/</link>
        <guid isPermaLink="true">http://efcl.info/2015/12/25/github-ribbon-generator/</guid>
        
        <category>JavaScript</category>
        
        <category>Vue.js</category>
        
        <category>Flux</category>
        
        <category>GitHub</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>#忘年_sushi でJavaScriptの素振りする技術について話してきた</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://twitter.com/search?q=%23%E5%BF%98%E5%B9%B4_sushi&quot; title=&quot;#忘年_sushi&quot;&gt;#忘年_sushi&lt;/a&gt;で&lt;a href=&quot;http://azu.github.io/slide/2015/year-end/javascript-swing.html&quot; title=&quot;JavaScriptの素振りする技術&quot;&gt;JavaScriptの素振りする技術&lt;/a&gt;について話してきました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://togetter.com/li/910679&quot; title=&quot;#忘年_sushi - Togetterまとめ&quot;&gt;#忘年_sushi - Togetterまとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;🍣 &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; &lt;a href=&quot;https://t.co/NAnBXXucnl&quot;&gt;pic.twitter.com/NAnBXXucnl&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674538717093085184&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular2&quot;&gt;Angular2&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; こう感じ(AngularJS) &lt;a href=&quot;https://t.co/rvr8jAsl4S&quot;&gt;pic.twitter.com/rvr8jAsl4S&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674535461642104832&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;Angualr 2を想定して書くAngular 1はAngularらしくない感じ&lt;/li&gt;
&lt;li&gt;Angular 1での縛りプレイ&lt;/li&gt;
&lt;li&gt;Angualr 2はαがアップデートされまくってる

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/releases&quot; title=&quot;Releases · angular/angular&quot;&gt;Releases · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJS/releases&quot; title=&quot;RxJS&quot;&gt;RxJS&lt;/a&gt;もαがアップデートされまくってる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;コーチング&quot;&gt;コーチング&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;コーチングとは

&lt;ul&gt;
&lt;li&gt;DDDみたいなもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;DDDを多人数との現実的なコミュニケーションパターンとして捉えるなら、コーチングで学んでることも同じようなパターンランゲージ&amp;#10; &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674537699605262336&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;コーチングの分類&lt;/li&gt;
&lt;li&gt;広義なコーチング = 人との関わり全般&lt;/li&gt;
&lt;li&gt;狭義のコーチング = コーチング資格の持ってるひとのやること&lt;/li&gt;
&lt;li&gt;マネージメントとコーチング

&lt;ul&gt;
&lt;li&gt;コーチングから見るとマネージメントは別&lt;/li&gt;
&lt;li&gt;マネージメントから見るとコーチングは別、またマネージメントの一種の手法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;マネージメントの問題を解決するときのツールが欲しいという話 &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674541071724994560&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;pdf.js-controller&quot;&gt;pdf.js-controller&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; &lt;a href=&quot;https://t.co/X3FRXzSkzA&quot;&gt;pic.twitter.com/X3FRXzSkzA&lt;/a&gt;&lt;/p&gt;&amp;mdash; サスケ (@kyo_ago) &lt;a href=&quot;https://twitter.com/kyo_ago/status/674541370808270848&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/12/07/pdf.js-controller/&quot; title=&quot;[pdf.js] テキスト選択出来るスライド表示ライブラリを書いた | Web Scratch&quot;&gt;[pdf.js] テキスト選択出来るスライド表示ライブラリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pdf.jsは扱いにくいけど普通に動いても面白い&lt;/li&gt;
&lt;li&gt;楽に扱えるライブラリを書いたよという話&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;serviceworkerとhttp/2-push&quot;&gt;ServiceWorkerとHTTP/2 push&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;これからの AppCache (？)の話をしている。 &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; &lt;a href=&quot;https://t.co/NVr9AntFk6&quot;&gt;pic.twitter.com/NVr9AntFk6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jxck (@Jxck_) &lt;a href=&quot;https://twitter.com/Jxck_/status/674553985764737024&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;http://jxck.hatenablog.com/entry/service-worker-casper&quot; title=&quot;HTTP/2 Push を Service Worker + Cache Aware Server Push で効率化したい話 - Block Rockin’ Codes&quot;&gt;HTTP/2 Push を Service Worker + Cache Aware Server Push で効率化したい話 - Block Rockin’ Codes&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;localhostのHTTPS化問題

&lt;ul&gt;
&lt;li&gt;HTTP2がHTTPSじゃないと使えないので&lt;a href=&quot;https://localhost/%E3%81%A8%E3%81%99%E3%82%8B%E5%BF%85%E8%A6%81%E3%81%8C%E3%81%82%E3%82%8B&quot;&gt;https://localhost/とする必要がある&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;でもlocalhostの証明書がinvalidだとSWが登録できない&lt;/li&gt;
&lt;li&gt;これを回避する安全な方法がChromeではバグッてる&lt;/li&gt;
&lt;li&gt;危険なフラグで無理矢理開発してる。怖い。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SWを使ったキャッシュレイヤーがあり、Server pushでそれに必要なものを送り込む

&lt;ul&gt;
&lt;li&gt;次回のリクエストをhookしてSWがレスポンスを返せれば、実際のリクエストをしなくてよくなるという話&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;cache aware server pushの理論

&lt;ul&gt;
&lt;li&gt;クライアントが持ってるSWのキャッシュをサーバに教える&lt;/li&gt;
&lt;li&gt;クッキーかヘッダーか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Hookポイントが色々足りない&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;社内let&amp;#39;s-encrypt&quot;&gt;社内Let&amp;#39;s Encrypt&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Let&amp;#39;s Encryptが社内ネットワークにあるドメインには使えないという話。&amp;#10;社外から認証のリクエストを制限してるから &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674554358290255872&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;社内ネットワークにあるドメインにはLet&amp;#39;s Encryptが使えない

&lt;ul&gt;
&lt;li&gt;社内ネットワーク内のみからアクセス出来るドメイン&lt;/li&gt;
&lt;li&gt;ACMEプロトコルでのやり取りは外と繋ぐ必要がある&lt;/li&gt;
&lt;li&gt;更新時に開けるか社内CA&amp;amp;社内Let&amp;#39;s Encrypt&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内に置くとhttpにしてしまう文化ができがち

&lt;ul&gt;
&lt;li&gt;AppCache Poistioning + HTTP のリスク&lt;/li&gt;
&lt;li&gt;社内ネットワークからのアクセスのみで中間者攻撃が残る&lt;/li&gt;
&lt;li&gt;社内ネットワークからのアクセスもSSL化すると安全&lt;/li&gt;
&lt;li&gt;社内ツールもちゃんとSSL化する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内ツールを置くドメイン + ワイルドカードでSSL&lt;/li&gt;
&lt;li&gt;社内CAを作って各端末にRoot証明書?

&lt;ul&gt;
&lt;li&gt;やっぱりリスクがあるのでは&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内やデータセンター内などのSSL化でACMEプロトコルを使ったものは増えるかも&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jxck.hatenablog.com/entry/letsencrypt-acme&quot; title=&quot;Let&amp;amp;#39;s Encrypt を支える ACME プロトコル - Block Rockin’ Codes&quot;&gt;Let&amp;#39;s Encrypt を支える ACME プロトコル - Block Rockin’ Codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;唐突に🍣 &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; &lt;a href=&quot;https://t.co/iwIpydUM7j&quot;&gt;pic.twitter.com/iwIpydUM7j&lt;/a&gt;&lt;/p&gt;&amp;mdash; teppeis (@teppeis) &lt;a href=&quot;https://twitter.com/teppeis/status/674571307334275076&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;let-vs-const&quot;&gt;let vs const&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/yosuke_furukawa/const-vs-let&quot; title=&quot;const vs let // Speaker Deck&quot;&gt;const vs let // Speaker Deck&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;そろそろ決着を付けたい let vs const &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yosuke FURUKAWA (@yosuke_furukawa) &lt;a href=&quot;https://twitter.com/yosuke_furukawa/status/674437783772004352&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;御社はこんな会議やってるんですか？ &lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; &lt;a href=&quot;https://t.co/SIHnmY8hcq&quot;&gt;pic.twitter.com/SIHnmY8hcq&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674559952023719936&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt;のPros

&lt;ul&gt;
&lt;li&gt;脳内メモリの節約に役立つ&lt;/li&gt;
&lt;li&gt;変わる場所だけが&lt;code&gt;let&lt;/code&gt;で宣言される&lt;/li&gt;
&lt;li&gt;if分岐で代入みたいなパターンが減る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt;のCons

&lt;ul&gt;
&lt;li&gt;オブジェクトのプロパティなどは書き換え可能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt;という文字数が長い、威圧感がある&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt;を使ったからといってすべてがimmutableにはならない&lt;/li&gt;
&lt;li&gt;モジュールからexportされたconstはconstではなくなる&lt;/li&gt;
&lt;li&gt;現状では&lt;code&gt;const&lt;/code&gt;できない場所が色々ある

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ecmascript.org/doku.php?id=strawman:defensible_classes&quot; title=&quot;strawman:defensible_classes [ES Wiki]&quot;&gt;strawman:defensible_classes [ES Wiki]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; 「今のconstは精神的なconst」&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674565236536422400&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    

&lt;ul&gt;
&lt;li&gt;精神的なconst

&lt;ul&gt;
&lt;li&gt;const使う事自体は正しい&lt;/li&gt;
&lt;li&gt;一種のコーディングスタイルに近い効力&lt;/li&gt;
&lt;li&gt;引数のconst問題&lt;/li&gt;
&lt;li&gt;constを利用することは問題ないが、既存の全てをconstにしろと言える程の効力がない&lt;/li&gt;
&lt;li&gt;constで解決出来ることは別のスタイルでも解決できる可能性もある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hjm333.hatenablog.com/entry/2015/09/15/000644&quot;&gt;【Effective Java】項目１５：可変性を最小限にする - モノクローム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tatsuyamuku.hatenablog.com/entry/2015/06/20/223021&quot;&gt;【Effective Java】項目15 可変性を最小限にする - tatsuyamukuの日記&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Javaのfinalはフィールドなどに対してという話。&lt;/li&gt;
&lt;li&gt;ローカル変数を全てconstしろという話ではない。&lt;/li&gt;
&lt;li&gt;現状のES6 constはローカル変数に対してのconstしかない&lt;/li&gt;
&lt;li&gt;JavaScriptにはスレッドセーフという概念はない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/%E5%BF%98%E5%B9%B4_sushi?src=hash&quot;&gt;#忘年_sushi&lt;/a&gt; 「結論はケースバイケース」 &lt;a href=&quot;https://t.co/Qc2vIdnlhP&quot;&gt;https://t.co/Qc2vIdnlhP&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/674568622187020288&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;javascriptの素振りする技術&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2015/year-end/javascript-swing.html&quot; title=&quot;JavaScriptの素振りする技術&quot;&gt;JavaScriptの素振りする技術&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;JavaScriptのトレンドというのは半分ぐらい主張なので、それを確認する術を身につけようと言う話でした。&lt;/p&gt;

&lt;p&gt;需要があったら別の記事で書くかもしれません。&lt;/p&gt;

&lt;h2 id=&quot;おわり&quot;&gt;おわり&lt;/h2&gt;

&lt;p&gt;今年もお疲れ様でした！&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Dec 2015 23:19:00 +0900</pubDate>
        <link>http://efcl.info/2015/12/09/year-end-sushi/</link>
        <guid isPermaLink="true">http://efcl.info/2015/12/09/year-end-sushi/</guid>
        
        <category>JavaScript</category>
        
        <category>HTTP2</category>
        
        <category>ServiceWorker</category>
        
        <category>SSL</category>
        
        <category>ES6</category>
        
        
        <category>イベント</category>
        
      </item>
    
      <item>
        <title>[pdf.js] テキスト選択出来るスライド表示ライブラリを書いた</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/azu/pdf.js-controller&quot; title=&quot;azu/pdf.js-controller&quot;&gt;pdf.js-controller&lt;/a&gt;というライブラリを書きました。&lt;/p&gt;

&lt;p&gt;名前の通り&lt;a href=&quot;https://github.com/mozilla/pdf.js&quot; title=&quot;mozilla/pdf.js&quot;&gt;mozilla/pdf.js&lt;/a&gt;を扱うものです。
PDFをスライドのようなページめくりをするものを作るときに簡単に作れるようにする目的で作成しています。&lt;/p&gt;

&lt;p&gt;実際に以下のスライドはこのライブラリを使って動作しています。&lt;/p&gt;

&lt;iframe src=&quot;http://azu.github.io/slide-pdf.js/?slide=http://azu.github.io/slide/2015/year-end/pdf.js.pdf&quot; scrolling=&quot;no&quot; style=&quot;border:0; background-color:white;&quot; height=&quot;700&quot; width=&quot;100%&quot;&gt;
&lt;/iframe&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide/2015/year-end/pdf.js.html&quot;&gt;http://azu.github.io/slide/2015/year-end/pdf.js.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install pdf.js-controller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールして、以下のように書くだけでとりあえずpdfを表示できます。
普通にpdf.jsを扱うと文字列の選択ができない、日本語が文字化けする、リンクがクリック出来ないなどハマりどころがたくさんあります。&lt;/p&gt;

&lt;p&gt;このライブラリでは&lt;a href=&quot;https://www.npmjs.com/package/pdfjs-dist&quot; title=&quot;pdfjs-dist&quot;&gt;pdfjs-dist&lt;/a&gt;のディレクトリを&lt;code&gt;pdfDistDir&lt;/code&gt;で指定する以外はあまり意識しなくても自動的にやってくれます。
(&lt;a href=&quot;https://www.npmjs.com/package/pdfjs-dist&quot; title=&quot;pdfjs-dist&quot;&gt;pdfjs-dist&lt;/a&gt;はdependenciesとして入ってるので自動的に入ります)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// container element&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pdf-container&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PDFController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pdf.js-controller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PDFController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// path to dir of pdfjs-dist&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pdfDistDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/node_modules/pdfjs-dist/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// path to URL of pdf.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Apply CORS to this path. It means that the URL should be same origin.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PDFURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./example.pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PDFURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initializedEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PDFController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;before_pdf_rendering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// before render&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PDFController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;after_pdf_rendering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// after render&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initializedEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fitItSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onkeydown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shiftKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctrlKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;metaKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// left, down, K, A&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prevPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;74&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// up, right, J, S&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/pdfjs-dist&quot; title=&quot;pdfjs-dist&quot;&gt;pdfjs-dist&lt;/a&gt;には言語別の情報が入った&lt;code&gt;cmaps&lt;/code&gt;というデータやWebWorkerのスクリプトが含まれています。
そのため、ウェブに上げるときはpdfDistDirのディレクトリも参照出来る場所に必要です。&lt;/p&gt;

&lt;h2 id=&quot;仕組み&quot;&gt;仕組み&lt;/h2&gt;

&lt;p&gt;以下の画像をみてもらうと分かりますが、pdf.jsはCanvasとテキスト、アノテーションの3つのレイヤーを使って描画しています。&lt;/p&gt;

&lt;p&gt;Canvasにはそもそも文字列選択機能が存在しないため、このような作りになっています。
つまりCanvasの描画の上に透明なdivにテキストを流しこんだり、クリック出来るようにリンクを置いたりしています。&lt;/p&gt;

&lt;p&gt;Firefoxの3D Viewで見てみるとそれぞれがレイヤーになっていることが分かりやすいです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/3D_View&quot; title=&quot;3D view - Firefox Developer Tools | MDN&quot;&gt;3D view - Firefox Developer Tools | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全体像3D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/IowSnMYNqvBbU3sGCCd3o3U2DlVYnA.png&quot; alt=&quot;3D View&quot;&gt;&lt;/p&gt;

&lt;p&gt;CanvasはPDFの内容を描画しています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/NjFOff5GhvGbB4I1XQKftvznz0bzD1.png&quot; alt=&quot;Canvas Layer&quot;&gt;&lt;/p&gt;

&lt;p&gt;テキストレイヤーにはテキストが流し込まれています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/3rjEGpf4jm9phrC3R3oyj9ohjNoSEG.png&quot; alt=&quot;Text Layer&quot;&gt;&lt;/p&gt;

&lt;p&gt;アノテーションコンテナにはリンクなどのPDFにおけるアノテーション情報が入っています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/BUFO9rYHuw0gK7UbhooUZ5tNRo7WCd.png&quot; alt=&quot;Annotation Layer&quot;&gt;&lt;/p&gt;

&lt;p&gt;デフォルトではCanvasのレイヤーしかないため、テキストやアノテーションは自分で行う必要があります。
そこを作るのが複雑なので、今回はその辺を隠蔽した&lt;a href=&quot;https://github.com/azu/pdf.js-controller&quot; title=&quot;azu/pdf.js-controller&quot;&gt;pdf.js-controller&lt;/a&gt;を作りました。&lt;/p&gt;

&lt;p&gt;元々、&lt;a href=&quot;https://github.com/azu/slide-pdf.js&quot; title=&quot;azu/slide-pdf.js&quot;&gt;azu/slide-pdf.js&lt;/a&gt;で実装してありましたが、ライブラリとして切り離した感じです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2014/10/07/pdf-presentation/&quot; title=&quot;pdf.jsを使いブラウザで見られるPDFスライド表示ツールを作った | Web Scratch&quot;&gt;pdf.jsを使いブラウザで見られるPDFスライド表示ツールを作った | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FirefoxのビルトインのpdfビューアライクのUIを利用したいだけの場合は、&lt;a href=&quot;https://github.com/mozilla/pdf.js/blob/master/web/viewer.html&quot; title=&quot;pdf.js/viewer.html at master · mozilla/pdf.js&quot;&gt;pdf.js/viewer.html at master · mozilla/pdf.js&lt;/a&gt;あたりを見るといいです。(iframeで表示するとかできます)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/05/04/pdf-annotation-markdown/&quot; title=&quot;PDFを見ながらMarkdownでメモを取れるアプリを書いた | Web Scratch&quot;&gt;PDFを見ながらMarkdownでメモを取れるアプリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;おわりに&quot;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.onk.ninja/2015/12/02/release-sharedoc&quot; title=&quot;スライド共有サービス sharedoc を作りました - onk.ninja&quot;&gt;スライド共有サービス sharedoc を作りました - onk.ninja&lt;/a&gt;を見ていて、未だにpdf.jsの扱いがとっても面倒そうだったのでライブラリとして切り出しました。&lt;/p&gt;

&lt;p&gt;pdf.jsは意外と動いて面白いのと、&lt;a href=&quot;http://speakerdeck.com/&quot;&gt;技術的&lt;/a&gt;な&lt;a href=&quot;http://niconare.nicovideo.jp/&quot;&gt;スライドサービス&lt;/a&gt;でリンクがクリック出来ないのは辛いので何か頑張って欲しいと思いました。&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Dec 2015 09:22:00 +0900</pubDate>
        <link>http://efcl.info/2015/12/07/pdf.js-controller/</link>
        <guid isPermaLink="true">http://efcl.info/2015/12/07/pdf.js-controller/</guid>
        
        <category>JavaScript</category>
        
        <category>PDF</category>
        
        <category>スライド</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>WeeklyメルマガのURLを貼ったら中のリンクを全部Pocketに突っ込むアプリ</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/azu/read-all-later&quot; title=&quot;azu/read-all-later&quot;&gt;azu/read-all-later&lt;/a&gt;というElectronアプリを作りました。&lt;/p&gt;

&lt;p&gt;ElectronアプリじゃなくてNode.jsのCLIでも良かったのですが面倒そうなことが分かったのでとりあえずアプリとして動きます。
(OAuthの認証情報を保存するのをどうやって共有させればいいんだろうというのが難しそうだった)&lt;/p&gt;

&lt;h2 id=&quot;機能&quot;&gt;機能&lt;/h2&gt;

&lt;p&gt;機能はとても単純で複数のURLを同時に&lt;a href=&quot;https://getpocket.com/&quot;&gt;Pocket&lt;/a&gt;へ保存することができます。
加えて、&lt;strong&gt;URL&lt;/strong&gt;にURLを貼るとそのサイト内で出てくるリンク一覧を抽出してPocketに送ることができます。&lt;/p&gt;

&lt;p&gt;以下のような動作になります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://efcl.info/wp-content/uploads/2015/11/read-all-later.gif&quot; alt=&quot;gif read-all-later&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/read-all-later/releases/latest&quot;&gt;latest release&lt;/a&gt;
からアプリをダウンロードして起動できます。&lt;/p&gt;

&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Login to &amp;quot;Pocket&amp;quot;&lt;/li&gt;
&lt;li&gt;URLをペースト&lt;/li&gt;
&lt;li&gt;(Optional)Tags や URL List を編集&lt;/li&gt;
&lt;li&gt;Read All Later!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;でURL ListにあるURLが全部Pocketに送信されます。&lt;/p&gt;

&lt;h2 id=&quot;目的&quot;&gt;目的&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot; title=&quot;JavaScript Weekly&quot;&gt;JavaScript Weekly&lt;/a&gt;のようなWeekly系のメルマガを購読しててもやっぱり単位がでかいのでちょっと読みにくいなと思ったため作りました。
(&lt;a href=&quot;http://azu.github.io/Meta-Weekly/&quot; title=&quot;Meta Weekly&quot;&gt;Meta Weekly&lt;/a&gt;というサイトにWeekly系のメルマガをまとめています)&lt;/p&gt;

&lt;p&gt;最初はPocketのようなアプリを作ろうとしましたが、Pocketのアプリが悪くなかったのでもっと使うためにまとめて突っ込めるアプリを書きました。&lt;/p&gt;

&lt;p&gt;以下のようなワークフローで上手く行くのかを今試している感じです。&lt;/p&gt;

&lt;p&gt;とりあえずPocketに記事を個別に突っ込む -&amp;gt; チラ見していって気になったものをPocketでFavする -&amp;gt; FavしたものをIFTTT経由で&lt;a href=&quot;https://www.diigo.com/&quot; title=&quot;Diigo&quot;&gt;Diigo&lt;/a&gt;にブクマ -&amp;gt; &lt;a href=&quot;https://www.diigo.com/&quot; title=&quot;Diigo&quot;&gt;Diigo&lt;/a&gt;のRSSでもう一度見る&lt;/p&gt;

&lt;p&gt;DiigoのRSSは記事の先頭をちょっとだけ出してくれるので良かった。&lt;a href=&quot;https://www.inoreader.com/&quot; title=&quot;Inoreader&quot;&gt;Inoreader&lt;/a&gt;がもっと良さそうでしたが、その機能は有料っぽかったので諦めました(RSSをフィルターしたRSSとかを作れて便利)&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Nov 2015 20:41:00 +0900</pubDate>
        <link>http://efcl.info/2015/11/30/read-all-later/</link>
        <guid isPermaLink="true">http://efcl.info/2015/11/30/read-all-later/</guid>
        
        <category>Electron</category>
        
        <category>Pocket</category>
        
        <category>JavaScript</category>
        
        <category>OAuth</category>
        
        
        <category>javascript</category>
        
      </item>
    
  </channel>
</rss>
