// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getTokenizer = getTokenizer;
exports.tokenize = tokenize;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _kuromoji = require("kuromoji");

var _kuromoji2 = _interopRequireDefault(_kuromoji);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _Deferred = require("./Deferred");

var _Deferred2 = _interopRequireDefault(_Deferred);

var kuromojiDir = require.resolve("kuromoji");
var options = { dicPath: _path2["default"].join(kuromojiDir, "../../dict") + "/" };
var deferred = new _Deferred2["default"]();
// cache for tokenizer
var _tokenizer = null;
// lock boolean
var isLoading = false;

function getTokenizer() {
    if (_tokenizer) {
        return Promise.resolve(_tokenizer);
    }
    if (isLoading) {
        return deferred.promise;
    }
    isLoading = true;
    // load dict
    _kuromoji2["default"].builder(options).build(function (err, tokenizer) {
        if (err) {
            return deferred.reject(err);
        }
        _tokenizer = tokenizer;
        deferred.resolve(tokenizer);
    });
    return deferred.promise;
}

function tokenize(text) {
    return getTokenizer().then(function (tokenizer) {
        return tokenizer.tokenize(text);
    });
}

exports["default"] = tokenize;
//# sourceMappingURL=kuromojin.js.map