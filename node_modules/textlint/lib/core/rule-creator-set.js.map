{"version":3,"sources":["../../src/core/rule-creator-set.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;iCAE2B,uBAAuB;;AAD/D,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,2BAA2B,CAAC,CAAC;;AAE5D,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,KAAK,EAAE,WAAW,EAAK;AAC9C,QAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxC,UAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAC9B,YAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/B,gDAAgB,WAAW,EAAE,GAAG,CAAC,CAAC;;AAElC,YAAM,UAAU,GAAG,WAAW,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;AACnD,YAAI,UAAU,KAAK,KAAK,EAAE;AACtB,iBAAK,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;AAC9B,uBAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;SACjC;KACJ,CAAC,CAAC;AACH,WAAO,WAAW,CAAC;CACtB,CAAC;;;;;;IAKmB,cAAc;;;;;;;AAMpB,aANM,cAAc,GAMW;YAA9B,KAAK,yDAAG,EAAE;YAAE,WAAW,yDAAG,EAAE;;8BANvB,cAAc;;AAO3B,YAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAC5B,YAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC;;AAExC,YAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC/E,YAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC;KAChD;;iBAbgB,cAAc;;eAgBlB,yBAAG;;;AACZ,mBAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,QAAQ,EAAI;AACrC,uBAAO,iCAAS,MAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;aACzC,CAAC,CAAC;SACN;;;eAEO,kBAAC,UAAU,EAAE;;;AACjB,mBAAO,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,UAAA,QAAQ,EAAI;AACxC,oBAAM,KAAK,uBAAK,QAAQ,EAAG,OAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjD,oBAAM,WAAW,uBAAK,QAAQ,EAAG,OAAK,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7D,uBAAO,UAAU,CAAC,IAAI,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;aAC7D,CAAC,CAAC;SACN;;;WA5BgB,cAAc;;;qBAAd,cAAc","file":"rule-creator-set.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst debug = require(\"debug\")(\"textlint:rule-creator-set\");\nimport {assertRuleShape, hasFixer} from \"./rule-creator-helper\";\nconst filterByAvailable = (rules, rulesConfig) => {\n    const resultRules = Object.create(null);\n    Object.keys(rules).forEach(key => {\n        const ruleCreator = rules[key];\n        assertRuleShape(ruleCreator, key);\n        // \"rule-name\" : false => disable\n        const ruleConfig = rulesConfig && rulesConfig[key];\n        if (ruleConfig !== false) {\n            debug(\"use \\\"%s\\\" rule\", key);\n            resultRules[key] = rules[key];\n        }\n    });\n    return resultRules;\n};\n\n/**\n * Manage RuleCreator*s* object and RuleOption*s*\n */\nexport default class RuleCreatorSet {\n    /**\n     * @param {Object} rules\n     * @param {Object} rulesConfig\n     * @constructor\n     */\n    constructor(rules = {}, rulesConfig = {}) {\n        this.rawRulesObject = rules;\n        this.rawRulesConfigObject = rulesConfig;\n        // initialize\n        this.rules = filterByAvailable(this.rawRulesObject, this.rawRulesConfigObject);\n        this.ruleNames = Object.keys(this.rules);\n        this.rulesConfig = this.rawRulesConfigObject;\n    }\n\n\n    getFixerNames() {\n        return this.ruleNames.filter(ruleName => {\n            return hasFixer(this.rules[ruleName]);\n        });\n    }\n\n    mapFixer(mapHandler) {\n        return this.getFixerNames().map(ruleName => {\n            const rules = {[ruleName]: this.rules[ruleName]};\n            const rulesConfig = {[ruleName]: this.rulesConfig[ruleName]};\n            return mapHandler(new RuleCreatorSet(rules, rulesConfig));\n        });\n    }\n}\n"]}