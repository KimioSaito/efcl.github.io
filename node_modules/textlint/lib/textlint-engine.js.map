{"version":3,"sources":["../src/textlint-engine.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;wCAEkB,+BAA+B;;;;;;;;AAD9D,IAAM,eAAe,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;;IAMjC,cAAc;;;;;;AAMpB,SANM,cAAc,CAMnB,MAAM,EAAE;0BANH,cAAc;;AAO3B,QAAM,QAAQ,GAAG;;;;;AAKb,cAAM,EAAE,gBAAC,YAAY,EAAK;;;;;;;AAOtB,mBAAO,SAAS,aAAa,CAAC,IAAI,EAAE;AAChC,uBAAO,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACtC,CAAC;SACL;;;;;AAKD,cAAM,EAAE,gBAAC,YAAY,EAAK;;;;;;;;AAQtB,mBAAO,SAAS,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE;AACrC,uBAAO,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;aAC3C,CAAC;SACL;;;;AAID,gBAAQ,EAAE,kBAAC,eAAe,EAAK;;AAE3B,gBAAI,CAAC,eAAe,CAAC,aAAa,EAAE;AAChC,+BAAe,CAAC,aAAa,GAAG,SAAS,CAAC;aAC7C;AACD,mBAAO,eAAe,CAAC,eAAe,CAAC,CAAC;SAC3C;KACJ,CAAC;AACF,WAAO,0CAAuB,MAAM,EAAE,QAAQ,CAAC,CAAC;CACnD;;qBAnDgB,cAAc","file":"textlint-engine.js","sourcesContent":["\"use strict\";\nconst createFormatter = require(\"textlint-formatter\");\nimport TextLintEngineCore from \"./engine/textlint-engine-core\";\n/**\n * TextLintEngine a adapter for TextLintEngineCore.\n * It aim to pull the whole look together. (TextLintEngine and TextFixEngine)\n */\nexport default class TextLintEngine {\n    /**\n     * TextLintEngine is a adaptor of TextLintEngineCore.\n     * @param {Config} config\n     * @returns {TextLintEngineCore}\n     */\n    constructor(config) {\n        const executor = {\n            /**\n             * @param {TextLintCore} textlintCore\n             * @returns {function()}\n             */\n            onFile: (textlintCore) => {\n                /**\n                 * Executes the current configuration on an array of file and directory names.\n                 * TextLintEngine#executeOnFile\n                 * @param {String[]}  files An array of file and directory names.\n                 * @returns {TextLintResult[]} The results for all files that were linted.\n                 */\n                return function executeOnFile(file) {\n                    return textlintCore.lintFile(file);\n                };\n            },\n            /**\n             * @param {TextLintCore} textlintCore\n             * @returns {function()}\n             */\n            onText: (textlintCore) => {\n                /**\n                 * lint text, and return TextLintResult[]\n                 * TextLintEngine#executeOnText\n                 * @param {string} text linting text content\n                 * @param {string} ext ext is a type for linting. default: \".txt\"\n                 * @returns {TextLintResult[]}\n                 */\n                return function executeOnText(text, ext) {\n                    return textlintCore.lintText(text, ext);\n                };\n            },\n            /**\n             * @param {TextLintFormatterOption} formatterConfig\n             */\n            onFormat: (formatterConfig) => {\n                // default formatter name: stylish\n                if (!formatterConfig.formatterName) {\n                    formatterConfig.formatterName = \"stylish\";\n                }\n                return createFormatter(formatterConfig);\n            }\n        };\n        return new TextLintEngineCore(config, executor);\n    }\n}\n"]}