{"version":3,"sources":["../../src/shared/MapLike.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;AACb,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;;;IAKZ,OAAO;AACb,aADM,OAAO,GACE;;;YAAd,OAAO,yDAAG,EAAE;;8BADP,OAAO;;AAEpB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,eAAO,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AACrB,kBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,+BAA+B,CAAC,CAAC;AAC9D,kBAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;KACN;;;;;;iBAPgB,OAAO;;eAYlB,kBAAG;AACL,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;;;;;;eAMG,gBAAG;AACH,mBAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;;;;;;;;eAMK,kBAAG;;AAEL,gBAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AACzB,gBAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,gBAAM,OAAO,GAAG,EAAE,CAAC;AACnB,gBAAI,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAChB,uBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5B,CAAC,CAAC;AACH,mBAAO,OAAO,CAAC;;SAElB;;;;;;;;eAME,aAAC,GAAG,EAAE;AACL,mBAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;;;;;eAQE,aAAC,GAAG,EAAE;AACL,mBAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;SAChC;;;;;;;;;;eASE,aAAC,GAAG,EAAE,KAAK,EAAE;AACZ,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACzB,mBAAO,IAAI,CAAC;SACf;;;;;;;;eAMI,iBAAG;AACJ,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,mBAAO,IAAI,CAAC;SACf;;;WA7EgB,OAAO;;;qBAAP,OAAO","file":"MapLike.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst assert = require(\"assert\");\n/*\n    ES6 Map like object.\n    This is not iterable.\n */\nexport default class MapLike {\n    constructor(entries = []) {\n        this._store = Object.create(null);\n        entries.forEach(entry => {\n            assert(Array.isArray(entry), \"new MapLike([ [key, value] ])\");\n            this.set(entry[0], entry[1]);\n        });\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJSON() {\n        return this._store;\n    }\n\n    /**\n     * get keys\n     * @returns {Array}\n     */\n    keys() {\n        return Object.keys(this._store);\n    }\n\n    /**\n     * get values\n     * @returns {Array}\n     */\n    values() {\n        /* eslint-disable guard-for-in */\n        const keys = this.keys();\n        const store = this._store;\n        const results = [];\n        keys.forEach(key => {\n            results.push(store[key]);\n        });\n        return results;\n        /* eslint-enable guard-for-in */\n    }\n\n    /**\n     * @param {string} key\n     * @returns {*}\n     */\n    get(key) {\n        return this._store[key];\n    }\n\n\n    /**\n     * has value of key\n     * @param key\n     * @returns {boolean}\n     */\n    has(key) {\n        return this.get(key) != null;\n    }\n\n\n    /**\n     * set value for key\n     * @param {string} key\n     * @param {*} value\n     * @return {MapLike}\n     */\n    set(key, value) {\n        this._store[key] = value;\n        return this;\n    }\n\n    /**\n     * clear defined key,value\n     * @returns {MapLike}\n     */\n    clear() {\n        this._store = Object.create(null);\n        return this;\n    }\n}\n"]}