// MIT Â© 2018 azu
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fetchProofdict = fetchProofdict;
var fetch = require("fetch-ponyfill")().fetch;
var debug = require("debug")("textlint-rule-proofdict");

function delayPromise(ms) {
    return new Promise(function (resolve) {
        setTimeout(resolve, ms);
    });
}

function timeoutPromise(promise, ms) {
    var timeout = delayPromise(ms).then(function () {
        var error = new Error("Operation timed out after " + ms + " ms");
        error.name = "TimeoutError";
        throw error;
    });
    return Promise.race([promise, timeout]);
}

function fetchProofdict(_ref) {
    var URL = _ref.URL;

    return timeoutPromise(fetch(URL), 5000).then(function (res) {
        if (!res.ok) {
            throw Error("Proofdict is not found: " + URL);
        }
        return res.json();
    }).catch(function (error) {
        if (error.name === "TimeoutError") {
            debug("TimeoutError", error);
            return;
        }
        return Promise.reject(error);
    });
}
//# sourceMappingURL=fetch-proofdict.js.map